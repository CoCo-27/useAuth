{"version":3,"file":"index.umd.js","sources":["../src/AuthProvider.js","../src/useAuth.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport Auth0 from \"auth0-js\";\n\n// import { authReducer } from \"./authReducer\";\n\nconst AUTH0_DOMAIN = \"sparkjoy.auth0.com\";\nconst AUTH0_CLIENT_ID = \"GGfO12E5R8iHPBPh87bym5b3gzmdaYY9\";\nconst CALLBACK_DOMAIN =\n    typeof window !== \"undefined\"\n        ? `${window.location.protocol}//${window.location.host}`\n        : \"https://spark-joy.netlify.com/\";\n\nexport const AuthContext = React.createContext(null);\n\nconst authReducer = (state, action) => {\n    switch (action.type) {\n        case \"login\":\n            const { authResult, user } = action;\n            const expiresAt =\n                authResult.expiresIn * 1000 + new Date().getTime();\n\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.setItem(\"access_token\", authResult.accessToken);\n                localStorage.setItem(\"id_token\", authResult.idToken);\n                localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt));\n                localStorage.setItem(\"user\", JSON.stringify(user));\n            }\n\n            return {\n                user,\n                expiresAt\n            };\n        case \"logout\":\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.removeItem(\"access_token\");\n                localStorage.removeItem(\"id_token\");\n                localStorage.removeItem(\"expires_at\");\n                localStorage.removeItem(\"user\");\n            }\n\n            return {\n                user: {},\n                expiresAt: null\n            };\n        default:\n            return state;\n    }\n};\n\nexport const AuthProvider = ({ children, navigate }) => {\n    const [state, dispatch] = useReducer((state, action) => state, {});\n\n    const auth0 = new Auth0.WebAuth({\n        domain: AUTH0_DOMAIN,\n        clientID: AUTH0_CLIENT_ID,\n        redirectUri: `${CALLBACK_DOMAIN}/auth0_callback`,\n        audience: `https://${AUTH0_DOMAIN}/api/v2/`,\n        responseType: \"token id_token\",\n        scope: \"openid profile email\"\n    });\n\n    console.log({ useReducer });\n\n    // const [state, dispatch] = useReducer(authReducer, {\n    //     user:\n    //         typeof localStorage !== \"undefined\"\n    //             ? JSON.parse(localStorage.getItem(\"user\"))\n    //             : {},\n    //     expiresAt:\n    //         typeof localStorage !== \"undefined\"\n    //             ? JSON.parse(localStorage.getItem(\"expires_at\"))\n    //             : null\n    // });\n\n    return (\n        <AuthContext.Provider\n            value={{\n                state,\n                dispatch,\n                auth0,\n                navigate\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { AuthContext } from \"./AuthProvider\";\n\nexport const useAuth = () => {\n    const { state, dispatch, auth0, navigate } = useContext(AuthContext);\n\n    const login = () => {\n        auth0.authorize();\n    };\n\n    const logout = () => {\n        dispatch({\n            type: \"logout\"\n        });\n\n        // Return to the homepage after logout.\n        navigate(\"/\");\n    };\n\n    const handleAuthentication = () => {\n        if (typeof window !== \"undefined\") {\n            auth0.parseHash((err, authResult) => {\n                if (\n                    authResult &&\n                    authResult.accessToken &&\n                    authResult.idToken\n                ) {\n                    setSession(authResult);\n                } else if (err) {\n                    console.log(err);\n                }\n            });\n        }\n    };\n\n    const setSession = authResult => {\n        auth0.client.userInfo(authResult.accessToken, (err, user) => {\n            if (err) {\n                console.log(err);\n            } else {\n                dispatch({\n                    type: \"login\",\n                    authResult,\n                    user\n                });\n            }\n\n            navigate(\"/\");\n        });\n    };\n\n    const isAuthenticated = () => {\n        return state.expiresAt && new Date().getTime() < state.expiresAt;\n    };\n\n    return {\n        isAuthenticated,\n        user: state.user,\n        userId: state.user ? state.user.sub : null,\n        login,\n        logout,\n        handleAuthentication\n    };\n};\n"],"names":["CALLBACK_DOMAIN","window","location","AuthContext","createContext","ref","useReducer","state","action","auth0","Auth0","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","console","log","h","Provider","value","dispatch","navigate","children","useContext","expiresAt","Date","getTime","user","userId","sub","authorize","type","parseHash","err","authResult","accessToken","idToken","client","userInfo","setSession"],"mappings":"+SAOMA,EACgB,oBAAXC,OACEA,OAAOC,uBAAsBD,OAAOC,SAAc,KACrD,iCAEGC,8BAAoBC,cAAc,8BAqClBC,mCACCC,sBAAYC,EAAOC,UAAWD,GAAO,kBAEzDE,EAAQ,IAAIC,EAAMC,QAAQ,CAC5BC,OAhDa,qBAiDbC,SAhDgB,mCAiDhBC,YAAgBd,oBAChBe,8CACAC,aAAc,iBACdC,MAAO,gCAGXC,QAAQC,IAAI,YAAEb,eAcVc,EAACjB,EAAYkB,UACTC,MAAO,OACHf,WACAgB,QACAd,WACAe,IAGHC,+BC9EoCC,aAAWvB,uDAmDjD,mCAHII,EAAMoB,YAAa,IAAIC,MAAOC,UAAYtB,EAAMoB,WAKvDG,KAAMvB,EAAMuB,KACZC,OAAQxB,EAAMuB,KAAOvB,EAAMuB,KAAKE,IAAM,sBAnDtCvB,EAAMwB,+BAINV,EAAS,CACLW,KAAM,WAIVV,EAAS,sCAIa,oBAAXvB,QACPQ,EAAM0B,mBAAWC,EAAKC,GAEdA,GACAA,EAAWC,aACXD,EAAWE,iBAURF,GACf5B,EAAM+B,OAAOC,SAASJ,EAAWC,qBAAcF,EAAKN,GAC5CM,EACAlB,QAAQC,IAAIiB,GAEZb,EAAS,CACLW,KAAM,mBACNG,OACAP,IAIRN,EAAS,OApBDkB,CAAWL,GACJD,GACPlB,QAAQC,IAAIiB"}