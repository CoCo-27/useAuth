{"version":3,"file":"index.umd.js","sources":["../src/authReducer.ts","../src/useAuth.ts","../src/AuthProvider.tsx"],"sourcesContent":["import { Machine, assign, interpret } from \"xstate\";\nimport { AuthState, AuthAction } from \"./types\";\n\nexport const authMachine = Machine<AuthState>(\n    {\n        id: \"useAuth\",\n        initial: \"unauthenticated\",\n        context: {\n            user: {},\n            expiresAt: null,\n            authResult: null,\n            isAuthenticating: false,\n            error: undefined,\n            errorType: undefined,\n            config: {\n                navigate: () =>\n                    console.error(\n                        \"Please specify a navigation method that works with your router\"\n                    ),\n                callbackDomain: \"http://localhost:8000\",\n                customPropertyNamespace: \"http://localhost:8000\"\n            }\n        },\n        states: {\n            unauthenticated: {\n                on: {\n                    LOGIN: \"authenticating\",\n                    SET_CONFIG: {\n                        actions: [\"setConfig\"]\n                    }\n                }\n            },\n            authenticating: {\n                on: {\n                    ERROR: \"error\",\n                    AUTHENTICATED: \"authenticated\",\n                    SET_CONFIG: {\n                        actions: [\"setConfig\"]\n                    }\n                },\n                entry: [\"startAuthenticating\"],\n                exit: [\"stopAuthenticating\"]\n            },\n            authenticated: {\n                on: {\n                    LOGOUT: \"unauthenticated\",\n                    SET_CONFIG: {\n                        actions: [\"setConfig\"]\n                    }\n                },\n                entry: [\"saveUserToContext\", \"saveToLocalStorage\"],\n                exit: [\"clearUserFromContext\", \"clearLocalStorage\"]\n            },\n            error: {\n                entry: [\n                    \"saveErrorToContext\",\n                    \"clearUserFromContext\",\n                    \"clearLocalStorage\"\n                ]\n            }\n        }\n    },\n    {\n        actions: {\n            startAuthenticating: assign(context => {\n                return {\n                    isAuthenticating: true\n                };\n            }),\n            stopAuthenticating: assign(context => {\n                return {\n                    isAuthenticating: false\n                };\n            }),\n            saveUserToContext: assign((context, event) => {\n                const { authResult, user } = event;\n                const expiresAt =\n                    authResult.expiresIn! * 1000 + new Date().getTime();\n\n                return {\n                    user,\n                    authResult,\n                    expiresAt\n                };\n            }),\n            clearUserFromContext: assign(context => {\n                return {\n                    user: {},\n                    expiresAt: null,\n                    authResult: null\n                };\n            }),\n            saveToLocalStorage: (context, event) => {\n                const { expiresAt, user } = context;\n\n                if (typeof localStorage !== \"undefined\") {\n                    localStorage.setItem(\n                        \"useAuth:expires_at\",\n                        JSON.stringify(expiresAt)\n                    );\n                    localStorage.setItem(\"useAuth:user\", JSON.stringify(user));\n                }\n            },\n            clearLocalStorage: () => {\n                if (typeof localStorage !== \"undefined\") {\n                    localStorage.removeItem(\"useAuth:expires_at\");\n                    localStorage.removeItem(\"useAuth:user\");\n                }\n            },\n            saveErrorToContext: assign((context, event) => {\n                return {\n                    errorType: event.errorType,\n                    error: event.error\n                };\n            }),\n            setConfig: assign((context, event) => {\n                console.log(\"SET CONFIG\", context, event);\n                return {\n                    config: {\n                        ...context.config,\n                        ...event\n                    }\n                };\n            })\n        }\n    }\n);\n\n// check localstorage and login as soon as this file loads\nfunction hydrateFromLocalStorage(send: any) {\n    if (typeof localStorage !== \"undefined\") {\n        const expiresAt = new Date(\n            JSON.parse(localStorage.getItem(\"useAuth:expires_at\") || \"0\")\n        );\n\n        if (expiresAt > new Date()) {\n            const user = JSON.parse(\n                localStorage.getItem(\"useAuth:user\") || \"{}\"\n            );\n            send(\"LOGIN\");\n            send(\"AUTHENTICATED\", {\n                user,\n                authResult: {\n                    expiresIn:\n                        (new Date().getTime() - expiresAt.getTime()) / 1000\n                }\n            });\n        }\n    }\n}\n\nexport const authService = interpret(authMachine);\nauthService.start();\n\nhydrateFromLocalStorage(authService.send);\n","import { useCallback } from \"react\";\n\nimport {\n    useAuthInterface,\n    handleAuthResultInterface,\n    setSessionInterface\n} from \"./types\";\nimport {\n    Auth0DecodedHash,\n    Auth0UserProfile,\n    Auth0Error,\n    Auth0ParseHashError\n} from \"auth0-js\";\nimport { useService } from \"@xstate/react\";\nimport { authService } from \"./authReducer\";\n\nconst setSession: setSessionInterface = async ({\n    dispatch,\n    authProvider,\n    authResult\n}) => {\n    return new Promise((resolve, reject) => {\n        authProvider.client.userInfo(\n            authResult.accessToken || \"\",\n            (err: Auth0Error | null, user: Auth0UserProfile) => {\n                if (err) {\n                    dispatch(\"ERROR\", {\n                        errorType: \"userInfo\",\n                        error: err\n                    });\n                    reject(err);\n                } else {\n                    dispatch(\"AUTHENTICATED\", {\n                        authResult,\n                        user\n                    });\n                    resolve(user);\n                }\n            }\n        );\n    });\n};\n\nexport const handleAuthResult: handleAuthResultInterface = async ({\n    err,\n    dispatch,\n    authProvider,\n    authResult\n}) => {\n    if (authResult && authResult.accessToken && authResult.idToken) {\n        try {\n            await setSession({ dispatch, authProvider, authResult });\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    } else if (err) {\n        console.error(err);\n        dispatch(\"ERROR\", {\n            error: err,\n            errorType: \"authResult\"\n        });\n\n        return false;\n    } else {\n        return false;\n    }\n};\n\n/**\n * The main API for useAuth\n *\n * @return {boolean} isAuthenticated is current user authenticated\n * @return {boolean} isAuthenticating currently running authentication\n * @return {function} isAuthorized check if current user is authenticated and matches list of roles\n * @return {object} user current user\n * @return {string} userId current user's identifier\n * @return {object} authResult raw authentication result object from auth provider\n * @return {function} login start the login process\n * @return {function} signup same as login, passes { mode: \"signUp\", screen_hint: \"signup\" } to Auth0\n * @return {function} logout start the logout process\n * @return {function} handleAuthentication function to call on your callback page\n */\nexport const useAuth: useAuthInterface = () => {\n    const [state, dispatch] = useService(authService);\n\n    const {\n        authProvider,\n        navigate,\n        callbackDomain,\n        customPropertyNamespace\n    } = state.context.config;\n\n    const login = () => {\n        authProvider && authProvider.authorize();\n    };\n\n    const signup = () => {\n        authProvider &&\n            authProvider.authorize({ mode: \"signUp\", screen_hint: \"signup\" });\n    };\n\n    const logout = () => {\n        authProvider &&\n            authProvider.logout({\n                returnTo: callbackDomain\n            });\n        dispatch(\"LOGOUT\");\n\n        // Return to the homepage after logout.\n        navigate(\"/\");\n    };\n\n    const handleAuthentication = useCallback(\n        ({ postLoginRoute = \"/\" } = {}) => {\n            if (!authProvider || !navigate || !callbackDomain) {\n                console.warn(\"authProvider not configured yet\");\n                return;\n            }\n\n            if (typeof window !== \"undefined\") {\n                dispatch(\"LOGIN\");\n\n                authProvider.parseHash(\n                    async (\n                        err: Auth0ParseHashError | null,\n                        authResult: Auth0DecodedHash | null\n                    ) => {\n                        await handleAuthResult({\n                            err,\n                            authResult,\n                            dispatch,\n                            authProvider\n                        });\n\n                        navigate(postLoginRoute);\n                    }\n                );\n            }\n        },\n        [authProvider, navigate, callbackDomain]\n    );\n\n    const isAuthenticated = () => {\n        return !!(\n            state.context.expiresAt &&\n            new Date().getTime() < state.context.expiresAt\n        );\n    };\n\n    const isAuthorized = (roles: string | string[]) => {\n        const _roles = Array.isArray(roles) ? roles : [roles];\n        const metadata =\n            state.context.user[\n                // make this friendlier to use if you leave a trailing slash in config\n                `${customPropertyNamespace}/user_metadata`.replace(\n                    /\\/+user_metadata/,\n                    \"/user_metadata\"\n                )\n            ];\n\n        if (!isAuthenticated() || !metadata) {\n            return false;\n        } else {\n            return _roles.some(role => metadata.roles.includes(role));\n        }\n    };\n\n    return {\n        isAuthenticating: state.context.isAuthenticating,\n        isAuthenticated,\n        isAuthorized,\n        user: state.context.user,\n        userId: state.context.user ? state.context.user.sub : null,\n        authResult: state.context.authResult,\n        login,\n        signup,\n        logout,\n        handleAuthentication,\n        dispatch\n    };\n};\n","import React, { useEffect } from \"react\";\nimport Auth0 from \"auth0-js\";\nimport { AuthOptions } from \"auth0-js\";\n\nimport { AuthProviderInterface } from \"./types\";\nimport { useAuth } from \"./useAuth\";\n\nexport const AuthProvider: AuthProviderInterface = ({\n    children,\n    navigate,\n    auth0_audience_domain,\n    auth0_domain,\n    auth0_client_id,\n    auth0_params,\n    customPropertyNamespace\n}) => {\n    const callbackDomain =\n        typeof window !== \"undefined\"\n            ? `${window.location.protocol}//${window.location.host}`\n            : \"http://localhost:8000\";\n\n    const audienceDomain = auth0_audience_domain || auth0_domain;\n\n    const params: AuthOptions = {\n        domain: auth0_domain,\n        clientID: auth0_client_id,\n        redirectUri: `${callbackDomain}/auth0_callback`,\n        audience: `https://${audienceDomain}/api/v2/`,\n        responseType: \"token id_token\",\n        scope: \"openid profile email\"\n    };\n\n    const { dispatch } = useAuth();\n\n    // Instantiate Auth0 client\n\n    useEffect(() => {\n        const auth0 = new Auth0.WebAuth({ ...params, ...auth0_params });\n        dispatch(\"SET_CONFIG\", {\n            authProvider: auth0,\n            navigate,\n            customPropertyNamespace,\n            callbackDomain\n        });\n    }, [navigate, customPropertyNamespace, callbackDomain]);\n\n    return <React.Fragment>{children}</React.Fragment>;\n};\n"],"names":["authMachine","Machine","id","initial","context","user","expiresAt","authResult","isAuthenticating","error","undefined","errorType","config","navigate","console","callbackDomain","customPropertyNamespace","states","unauthenticated","on","LOGIN","SET_CONFIG","actions","authenticating","ERROR","AUTHENTICATED","entry","exit","authenticated","LOGOUT","startAuthenticating","assign","stopAuthenticating","saveUserToContext","event","expiresIn","Date","getTime","clearUserFromContext","saveToLocalStorage","localStorage","setItem","JSON","stringify","clearLocalStorage","removeItem","saveErrorToContext","setConfig","log","authService","interpret","start","send","parse","getItem","hydrateFromLocalStorage","useAuth","useService","state","dispatch","authProvider","handleAuthentication","useCallback","postLoginRoute","window","parseHash","err","accessToken","idToken","Promise","resolve","reject","client","userInfo","setSession","handleAuthResult","warn","isAuthenticated","isAuthorized","roles","_roles","Array","isArray","metadata","replace","some","role","includes","userId","sub","login","authorize","signup","mode","screen_hint","logout","returnTo","children","auth0_domain","auth0_params","location","protocol","host","params","domain","clientID","auth0_client_id","redirectUri","audience","auth0_audience_domain","responseType","scope","useEffect","auth0","Auth0","WebAuth","React","Fragment"],"mappings":"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"}