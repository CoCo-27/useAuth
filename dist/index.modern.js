import t,{useCallback as e,useEffect as n}from"react";import{useService as i}from"@xstate/react";import{addSeconds as r,isAfter as o,differenceInSeconds as a}from"date-fns";import{Machine as s,assign as c,interpret as u}from"xstate";import{choose as h}from"xstate/lib/actions";import l from"auth0-js";import d from"netlify-identity-widget";function p(){return(p=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}const g=u(s({id:"useAuth",initial:"unauthenticated",context:{user:{},expiresAt:null,authResult:null,isAuthenticating:!1,error:void 0,errorType:void 0,config:{navigate:()=>console.error("Please specify a navigation method that works with your router"),callbackDomain:"http://localhost:8000",customPropertyNamespace:"http://localhost:8000"}},states:{unauthenticated:{on:{LOGIN:"authenticating",CHECK_SESSION:"verifying",SET_CONFIG:{actions:["setConfig"]}}},authenticating:{on:{ERROR:"error",AUTHENTICATED:"authenticated",SET_CONFIG:{actions:["setConfig"]}},entry:["startAuthenticating"],exit:["stopAuthenticating"]},verifying:{invoke:{id:"checkSession",src:(t,e)=>t.config.authProvider.checkSession(),onDone:{target:"authenticated"},onError:{target:"error"}},entry:["startAuthenticating"],exit:["stopAuthenticating"]},authenticated:{on:{LOGOUT:"unauthenticated",SET_CONFIG:{actions:["setConfig"]},CHECK_SESSION:"verifying"},entry:["saveUserToContext","saveToLocalStorage"],exit:h([{cond:(t,e)=>"CHECK_SESSION"!==e.type,actions:["clearUserFromContext","clearLocalStorage"]}])},error:{entry:["saveErrorToContext","clearUserFromContext","clearLocalStorage"]}}},{actions:{startAuthenticating:c(t=>({isAuthenticating:!0})),stopAuthenticating:c(t=>({isAuthenticating:!1})),saveUserToContext:c((t,e)=>{const{authResult:n,user:i}=e.data?e.data:e;return{user:i,authResult:n,expiresAt:r(new Date,n.expiresIn)}}),clearUserFromContext:c(t=>({user:{},expiresAt:null,authResult:null})),saveToLocalStorage:(t,e)=>{const{expiresAt:n,user:i}=t;"undefined"!=typeof localStorage&&(localStorage.setItem("useAuth:expires_at",n?n.toISOString():"0"),localStorage.setItem("useAuth:user",JSON.stringify(i)))},clearLocalStorage:()=>{"undefined"!=typeof localStorage&&(localStorage.removeItem("useAuth:expires_at"),localStorage.removeItem("useAuth:user"))},saveErrorToContext:c((t,e)=>({errorType:e.errorType,error:e.error})),setConfig:c((t,e)=>({config:p({},t.config,e)}))}}));g.start(),function(t){if("undefined"!=typeof localStorage){const e=new Date(localStorage.getItem("useAuth:expires_at")||"0"),n=new Date;if(o(e,n)){const i=JSON.parse(localStorage.getItem("useAuth:user")||"{}");t("LOGIN"),t("AUTHENTICATED",{user:i,authResult:{expiresIn:a(e,n)}})}}}(g.send);const y=()=>{const[t,n]=i(g),{authProvider:r,navigate:a,callbackDomain:s,customPropertyNamespace:c}=t.context.config,u=e(async({postLoginRoute:t="/"}={})=>{r&&a&&s?"undefined"!=typeof window&&(n("LOGIN"),await r.handleLoginCallback(n)&&a(t)):console.warn("authProvider not configured yet")},[r,a,s]),h=()=>!(!t.context.expiresAt||!o(t.context.expiresAt,new Date));return{isAuthenticating:t.context.isAuthenticating,isAuthenticated:h,isAuthorized:e=>{const n=Array.isArray(e)?e:[e],i=t.context.user[(c+"/user_metadata").replace(/\/+user_metadata/,"/user_metadata")];return!(!h()||!i)&&n.some(t=>i.roles.includes(t))},user:t.context.user,userId:t.context.user?t.context.user.sub:null,authResult:t.context.authResult,login:()=>{null==r||r.authorize()},signup:()=>{null==r||r.signup()},logout:()=>{null==r||r.logout(s),n("LOGOUT"),a("/")},handleAuthentication:u,dispatch:n}};class f{constructor(t){this.dispatch=t.dispatch,this.auth0=new l.WebAuth(p({},t))}authorize(){this.auth0.authorize()}signup(){this.auth0.authorize({mode:"signUp",screen_hint:"signup"})}logout(t){this.auth0.logout({returnTo:t})}async handleLoginCallback(){var t=this;return new Promise((e,n)=>{this.auth0.parseHash(async function(n,i){n&&(t.dispatch("ERROR",{error:n,errorType:"authResult"}),e(!1));try{const n=await t.handleAuthResult(i);e(n)}catch(n){t.dispatch("ERROR",{error:n,errorType:"handleAuth"}),e(!1)}})})}async checkSession(){var t=this;return new Promise((e,n)=>{this.auth0.checkSession({},async function(i,r){if(!i&&r&&r.accessToken&&r.idToken)try{const n=await t.fetchUser(r);e({user:n,authResult:r})}catch(t){n(t)}else n(i||new Error("Session invalid"))})})}async handleAuthResult(t){if(t&&t.accessToken&&t.idToken){const e=await this.fetchUser(t);return this.dispatch("AUTHENTICATED",{authResult:t,user:e}),!0}return!1}async fetchUser(t){return new Promise((e,n)=>{this.auth0.client.userInfo((null==t?void 0:t.accessToken)||"",(t,i)=>{t?n(t):e(i)})})}}var m={__proto__:null,Auth0:f,NetlifyIdentity:class{constructor(t){this.netlifyIdentity=d,this.netlifyIdentity.init(t),this.dispatch=t.dispatch,this.netlifyIdentity.on("error",t=>{this.dispatch("ERROR",{error:t,errorType:"netlifyError"})}),this.netlifyIdentity.on("login",t=>{this.dispatch("AUTHENTICATED",{user:t,authResult:{expiresIn:7200}})}),this.netlifyIdentity.on("init",t=>{console.log(t),t&&(this.dispatch("LOGIN"),this.dispatch("AUTHENTICATED",{user:t,authResult:{expiresIn:7200}}))})}authorize(){this.dispatch("LOGIN"),this.netlifyIdentity.open("login")}signup(){this.dispatch("LOGIN"),this.netlifyIdentity.open("signup")}logout(t){this.netlifyIdentity.logout()}async handleLoginCallback(t){return!0}async checkSession(){return await this.netlifyIdentity.refresh(),{user:{},authResult:{}}}}};const A=({children:e,navigate:i,auth0_audience_domain:r,auth0_domain:o,auth0_client_id:a,auth0_params:s={},customPropertyNamespace:c})=>{const u="undefined"!=typeof window?`${window.location.protocol}//${window.location.host}`:"http://localhost:8000",h={domain:o,clientID:a,redirectUri:u+"/auth0_callback",audience:`https://${r||o}/api/v2/`,responseType:"token id_token",scope:"openid profile email"},{dispatch:l}=y();return n(()=>{const t=new f(p({dispatch:l},h,s));l("SET_CONFIG",{authProvider:t,navigate:i,customPropertyNamespace:c,callbackDomain:u}),l("CHECK_SESSION")},[i,c,u]),t.createElement(t.Fragment,null,e)};export{A as AuthProvider,m as Providers,y as useAuth};
//# sourceMappingURL=index.modern.js.map
