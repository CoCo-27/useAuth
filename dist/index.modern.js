import t,{useCallback as e,useEffect as n}from"react";import{useService as r}from"@xstate/react";import{addSeconds as i,isAfter as o,differenceInSeconds as a}from"date-fns";import{Machine as s,assign as u,interpret as c}from"xstate";import{choose as l}from"xstate/lib/actions";import h from"auth0-js";import d from"netlify-identity-widget";function p(){return(p=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}const g=c(s({id:"useAuth",initial:"unauthenticated",context:{user:{},expiresAt:null,authResult:null,isAuthenticating:!1,error:void 0,errorType:void 0,config:{navigate:()=>console.error("Please specify a navigation method that works with your router"),callbackDomain:"http://localhost:8000",customPropertyNamespace:"http://localhost:8000"}},states:{unauthenticated:{on:{LOGIN:"authenticating",CHECK_SESSION:"verifying",SET_CONFIG:{actions:["setConfig"]}}},authenticating:{on:{ERROR:"error",AUTHENTICATED:"authenticated",SET_CONFIG:{actions:["setConfig"]}},entry:["startAuthenticating"],exit:["stopAuthenticating"]},verifying:{invoke:{id:"checkSession",src:(t,e)=>t.config.authProvider.checkSession(),onDone:{target:"authenticated"},onError:{target:"error"}},entry:["startAuthenticating"],exit:["stopAuthenticating"]},authenticated:{on:{LOGOUT:"unauthenticated",SET_CONFIG:{actions:["setConfig"]},CHECK_SESSION:"verifying"},entry:["saveUserToContext","saveToLocalStorage"],exit:l([{cond:(t,e)=>"CHECK_SESSION"!==e.type,actions:["clearUserFromContext","clearLocalStorage"]}])},error:{entry:["saveErrorToContext","clearUserFromContext","clearLocalStorage"]}}},{actions:{startAuthenticating:u(t=>({isAuthenticating:!0})),stopAuthenticating:u(t=>({isAuthenticating:!1})),saveUserToContext:u((t,e)=>{const{authResult:n,user:r}=e.data?e.data:e;return{user:r,authResult:n,expiresAt:i(new Date,n.expiresIn)}}),clearUserFromContext:u(t=>({user:{},expiresAt:null,authResult:null})),saveToLocalStorage:(t,e)=>{const{expiresAt:n,user:r}=t;"undefined"!=typeof localStorage&&(localStorage.setItem("useAuth:expires_at",n?n.toISOString():"0"),localStorage.setItem("useAuth:user",JSON.stringify(r)))},clearLocalStorage:()=>{"undefined"!=typeof localStorage&&(localStorage.removeItem("useAuth:expires_at"),localStorage.removeItem("useAuth:user"))},saveErrorToContext:u((t,e)=>({errorType:e.errorType,error:e.error})),setConfig:u((t,e)=>({config:p({},t.config,e)}))}}));g.start(),function(t){if("undefined"!=typeof localStorage){const e=new Date(localStorage.getItem("useAuth:expires_at")||"0"),n=new Date;if(o(e,n)){const r=JSON.parse(localStorage.getItem("useAuth:user")||"{}");t("LOGIN"),t("AUTHENTICATED",{user:r,authResult:{expiresIn:a(e,n)}})}}}(g.send);const y=()=>{const[t,n]=r(g),{authProvider:i,navigate:a,callbackDomain:s,customPropertyNamespace:u}=t.context.config,c=e(async({postLoginRoute:t="/"}={})=>{i&&a&&s?"undefined"!=typeof window&&(n("LOGIN"),await i.handleLoginCallback(n)&&a(t)):console.warn("authProvider not configured yet")},[i,a,s]),l=()=>!(!t.context.expiresAt||!o(t.context.expiresAt,new Date));return{isAuthenticating:t.context.isAuthenticating,isAuthenticated:l,isAuthorized:e=>{const n=Array.isArray(e)?e:[e],r=null==i?void 0:i.userRoles(t.context.user,u);return!(!l()||!r)&&n.some(t=>r.includes(t))},user:t.context.user,userId:null==i?void 0:i.userId(t.context.user),authResult:t.context.authResult,login:()=>{null==i||i.authorize()},signup:()=>{null==i||i.signup()},logout:()=>{null==i||i.logout(s),n("LOGOUT"),a("/")},handleAuthentication:c,dispatch:n}};class f{constructor(t){this.dispatch=t.dispatch,this.auth0=new h.WebAuth(p({},t))}authorize(){this.auth0.authorize()}signup(){this.auth0.authorize({mode:"signUp",screen_hint:"signup"})}logout(t){this.auth0.logout({returnTo:t})}userId(t){return t.sub}userRoles(t,e){const n=t[(e+"/user_metadata").replace(/\/+user_metadata/,"/user_metadata")];return(null==n?void 0:n.roles)||null}async handleLoginCallback(){var t=this;return new Promise((e,n)=>{this.auth0.parseHash(async function(n,r){n&&(t.dispatch("ERROR",{error:n,errorType:"authResult"}),e(!1));try{const n=await t.handleAuthResult(r);e(n)}catch(n){t.dispatch("ERROR",{error:n,errorType:"handleAuth"}),e(!1)}})})}async checkSession(){var t=this;return new Promise((e,n)=>{this.auth0.checkSession({},async function(r,i){if(!r&&i&&i.accessToken&&i.idToken)try{const n=await t.fetchUser(i);e({user:n,authResult:i})}catch(t){n(t)}else n(r||new Error("Session invalid"))})})}async handleAuthResult(t){if(t&&t.accessToken&&t.idToken){const e=await this.fetchUser(t);return this.dispatch("AUTHENTICATED",{authResult:t,user:e}),!0}return!1}async fetchUser(t){return new Promise((e,n)=>{this.auth0.client.userInfo((null==t?void 0:t.accessToken)||"",(t,r)=>{t?n(t):e(r)})})}}var m={__proto__:null,Auth0:f,NetlifyIdentity:class{constructor(t){this.netlifyIdentity=d,this.netlifyIdentity.init(t),this.dispatch=t.dispatch,this.netlifyIdentity.on("error",t=>{this.dispatch("ERROR",{error:t,errorType:"netlifyError"})}),this.netlifyIdentity.on("login",t=>{var e;this.dispatch("AUTHENTICATED",{user:t,authResult:{expiresIn:null==(e=t.token)?void 0:e.expires_in}})}),this.netlifyIdentity.on("init",t=>{var e;t&&(this.dispatch("LOGIN"),this.dispatch("AUTHENTICATED",{user:t,authResult:{expiresIn:null==(e=t.token)?void 0:e.expires_in}}))})}authorize(){this.dispatch("LOGIN"),this.netlifyIdentity.open("login")}signup(){this.dispatch("LOGIN"),this.netlifyIdentity.open("signup")}logout(t){this.netlifyIdentity.logout()}async handleLoginCallback(t){return console.warn("handleLoginCallback is unnecessary with Netlify Identity Widget"),!0}async checkSession(){return console.warn("checkSession is unnecessary with Netlify Identity Widget"),{user:{},authResult:{}}}userId(t){return t.id}userRoles(t,e){return[t.role]||null}}};const I=({children:e,navigate:r,auth0_audience_domain:i,auth0_domain:o,auth0_client_id:a,auth0_params:s={},customPropertyNamespace:u})=>{const c="undefined"!=typeof window?`${window.location.protocol}//${window.location.host}`:"http://localhost:8000",l={domain:o,clientID:a,redirectUri:c+"/auth0_callback",audience:`https://${i||o}/api/v2/`,responseType:"token id_token",scope:"openid profile email"},{dispatch:h}=y();return n(()=>{const t=new f(p({dispatch:h},l,s));h("SET_CONFIG",{authProvider:t,navigate:r,customPropertyNamespace:u,callbackDomain:c}),h("CHECK_SESSION")},[r,u,c]),t.createElement(t.Fragment,null,e)};export{I as AuthProvider,m as Providers,y as useAuth};
//# sourceMappingURL=index.modern.js.map
