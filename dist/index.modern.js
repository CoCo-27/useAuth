import t,{useCallback as e,useEffect as r}from"react";import o from"auth0-js";import{useService as a}from"@xstate/react";import{addSeconds as n,isAfter as i,differenceInSeconds as s}from"date-fns";import{Machine as u,assign as c,interpret as l}from"xstate";import{choose as h}from"xstate/lib/actions";function p(){return(p=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t}).apply(this,arguments)}const d=l(u({id:"useAuth",initial:"unauthenticated",context:{user:{},expiresAt:null,authResult:null,isAuthenticating:!1,error:void 0,errorType:void 0,config:{navigate:()=>console.error("Please specify a navigation method that works with your router"),callbackDomain:"http://localhost:8000",customPropertyNamespace:"http://localhost:8000"}},states:{unauthenticated:{on:{LOGIN:"authenticating",CHECK_SESSION:"verifying",SET_CONFIG:{actions:["setConfig"]}}},authenticating:{on:{ERROR:"error",AUTHENTICATED:"authenticated",SET_CONFIG:{actions:["setConfig"]}},entry:["startAuthenticating"],exit:["stopAuthenticating"]},verifying:{invoke:{id:"checkSession",src:(t,e)=>async function({authProvider:t}){return console.log("CHECKING SESSION"),new Promise((e,r)=>{t.checkSession({},async(o,a)=>{if(!o&&a&&a.accessToken&&a.idToken)try{const r=await g({authProvider:t,authResult:a});console.log("resolving with",{user:r,authResult:a}),e({user:r,authResult:a})}catch(t){r(t)}else r(o||new Error("Session invalid"))})})}({authProvider:t.config.authProvider}),onDone:{target:"authenticated"},onError:{target:"error"}},entry:["startAuthenticating"],exit:["stopAuthenticating"]},authenticated:{on:{LOGOUT:"unauthenticated",SET_CONFIG:{actions:["setConfig"]},CHECK_SESSION:"verifying"},entry:["saveUserToContext","saveToLocalStorage"],exit:h([{cond:(t,e)=>"CHECK_SESSION"!==e.type,actions:["clearUserFromContext","clearLocalStorage"]}])},error:{entry:["saveErrorToContext","clearUserFromContext","clearLocalStorage"]}}},{actions:{startAuthenticating:c(t=>({isAuthenticating:!0})),stopAuthenticating:c(t=>({isAuthenticating:!1})),saveUserToContext:c((t,e)=>{const{authResult:r,user:o}=e.data?e.data:e;return{user:o,authResult:r,expiresAt:n(new Date,r.expiresIn)}}),clearUserFromContext:c(t=>({user:{},expiresAt:null,authResult:null})),saveToLocalStorage:(t,e)=>{const{expiresAt:r,user:o}=t;"undefined"!=typeof localStorage&&(localStorage.setItem("useAuth:expires_at",r?r.toISOString():"0"),localStorage.setItem("useAuth:user",JSON.stringify(o)))},clearLocalStorage:()=>{"undefined"!=typeof localStorage&&(localStorage.removeItem("useAuth:expires_at"),localStorage.removeItem("useAuth:user"))},saveErrorToContext:c((t,e)=>({errorType:e.errorType,error:e.error})),setConfig:c((t,e)=>({config:p({},t.config,e)}))}}));d.start(),function(t){if("undefined"!=typeof localStorage){const e=new Date(localStorage.getItem("useAuth:expires_at")||"0"),r=new Date;if(i(e,r)){const o=JSON.parse(localStorage.getItem("useAuth:user")||"{}");t("LOGIN"),t("AUTHENTICATED",{user:o,authResult:{expiresIn:s(e,r)}})}}}(d.send);const g=async({authProvider:t,authResult:e})=>new Promise((r,o)=>{t.client.userInfo(e.accessToken||"",(t,e)=>{t?o(t):r(e)})}),m=()=>{const[t,r]=a(d),{authProvider:o,navigate:n,callbackDomain:s,customPropertyNamespace:u}=t.context.config,c=e(({postLoginRoute:t="/"}={})=>{o&&n&&s?"undefined"!=typeof window&&(r("LOGIN"),o.parseHash(async(e,a)=>{await(async({err:t,dispatch:e,authProvider:r,authResult:o})=>{if(!(o&&o.accessToken&&o.idToken))return!!t&&(console.error(t),e("ERROR",{error:t,errorType:"authResult"}),!1);try{return e("AUTHENTICATED",{authResult:o,user:await g({authProvider:r,authResult:o})}),!0}catch(t){return e("ERROR",{error:t,errorType:"fetchUser"}),!1}})({err:e,authResult:a,dispatch:r,authProvider:o}),n(t)})):console.warn("authProvider not configured yet")},[o,n,s]),l=()=>!(!t.context.expiresAt||!i(t.context.expiresAt,new Date));return{isAuthenticating:t.context.isAuthenticating,isAuthenticated:l,isAuthorized:e=>{const r=Array.isArray(e)?e:[e],o=t.context.user[(u+"/user_metadata").replace(/\/+user_metadata/,"/user_metadata")];return!(!l()||!o)&&r.some(t=>o.roles.includes(t))},user:t.context.user,userId:t.context.user?t.context.user.sub:null,authResult:t.context.authResult,login:()=>{o&&o.authorize()},signup:()=>{o&&o.authorize({mode:"signUp",screen_hint:"signup"})},logout:()=>{o&&o.logout({returnTo:s}),r("LOGOUT"),n("/")},handleAuthentication:c,dispatch:r}},f=({children:e,navigate:a,auth0_audience_domain:n,auth0_domain:i,auth0_client_id:s,auth0_params:u={},customPropertyNamespace:c})=>{const l="undefined"!=typeof window?`${window.location.protocol}//${window.location.host}`:"http://localhost:8000",h={domain:i,clientID:s,redirectUri:l+"/auth0_callback",audience:`https://${n||i}/api/v2/`,responseType:"token id_token",scope:"openid profile email"},{dispatch:d}=m();return r(()=>{const t=new o.WebAuth(p({},h,u));d("SET_CONFIG",{authProvider:t,navigate:a,customPropertyNamespace:c,callbackDomain:l}),d("CHECK_SESSION")},[a,c,l]),t.createElement(t.Fragment,null,e)};export{f as AuthProvider,m as useAuth};
//# sourceMappingURL=index.modern.js.map
