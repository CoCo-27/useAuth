import t,{useCallback as e,useEffect as n,createElement as r,Fragment as i}from"react";import{useService as a}from"@xstate/react";import{addSeconds as o,isAfter as s,differenceInSeconds as u}from"date-fns";import{Machine as c,assign as l,interpret as h}from"xstate";import{choose as d}from"xstate/lib/actions";function p(){return(p=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}const g=h(c({id:"useAuth",initial:"unauthenticated",context:{user:{},expiresAt:null,authResult:null,isAuthenticating:!1,error:void 0,errorType:void 0,config:{navigate:()=>console.error("Please specify a navigation method that works with your router"),callbackDomain:"http://localhost:8000"}},states:{unauthenticated:{on:{LOGIN:"authenticating",CHECK_SESSION:"verifying",SET_CONFIG:{actions:["setConfig"]}}},authenticating:{on:{ERROR:"error",AUTHENTICATED:"authenticated",SET_CONFIG:{actions:["setConfig"]}},entry:["startAuthenticating"],exit:["stopAuthenticating"]},verifying:{invoke:{id:"checkSession",src:(t,e)=>t.config.authProvider.checkSession(),onDone:{target:"authenticated"},onError:{target:"unauthenticated",actions:["clearUserFromContext","clearLocalStorage"]}},entry:["startAuthenticating"],exit:["stopAuthenticating"]},authenticated:{on:{LOGOUT:"unauthenticated",SET_CONFIG:{actions:["setConfig"]},CHECK_SESSION:"verifying"},entry:["saveUserToContext","saveToLocalStorage"],exit:d([{cond:(t,e)=>"CHECK_SESSION"!==e.type,actions:["clearUserFromContext","clearLocalStorage"]}])},error:{entry:["saveErrorToContext","clearUserFromContext","clearLocalStorage"]}}},{actions:{startAuthenticating:l(t=>({isAuthenticating:!0})),stopAuthenticating:l(t=>({isAuthenticating:!1})),saveUserToContext:l((t,e)=>{const{authResult:n,user:r}=e.data?e.data:e;return{user:r,authResult:n,expiresAt:o(new Date,n.expiresIn)}}),clearUserFromContext:l(t=>({user:{},expiresAt:null,authResult:null})),saveToLocalStorage:(t,e)=>{const{expiresAt:n,user:r}=t;"undefined"!=typeof localStorage&&(localStorage.setItem("useAuth:expires_at",n?n.toISOString():"0"),localStorage.setItem("useAuth:user",JSON.stringify(r)))},clearLocalStorage:()=>{"undefined"!=typeof localStorage&&(localStorage.removeItem("useAuth:expires_at"),localStorage.removeItem("useAuth:user"))},saveErrorToContext:l((t,e)=>({errorType:e.errorType,error:e.error})),setConfig:l((t,e)=>({config:p({},t.config,e)}))}}));g.start(),function(t){if("undefined"!=typeof localStorage){const e=new Date(localStorage.getItem("useAuth:expires_at")||"0"),n=new Date;if(s(e,n)){const r=JSON.parse(localStorage.getItem("useAuth:user")||"{}");t("LOGIN"),t("AUTHENTICATED",{user:r,authResult:{expiresIn:u(e,n)}})}}}(g.send);const y=()=>{const[t,n]=a(g),{authProvider:r,navigate:i,callbackDomain:o}=t.context.config,u=e(async({postLoginRoute:t="/"}={})=>{r&&i?"undefined"!=typeof window&&(n("LOGIN"),await r.handleLoginCallback(n)&&i(t)):console.warn("authProvider not configured yet")},[r,i]),c=()=>!(!t.context.expiresAt||!s(t.context.expiresAt,new Date));return{isAuthenticating:t.context.isAuthenticating,isAuthenticated:c,isAuthorized:e=>{const n=Array.isArray(e)?e:[e],i=null==r?void 0:r.userRoles(t.context.user);return!(!c()||!i)&&n.some(t=>i.includes(t))},user:t.context.user,userId:null==r?void 0:r.userId(t.context.user),authResult:t.context.authResult,login:()=>{null==r||r.authorize()},signup:()=>{null==r||r.signup()},logout:t=>{"string"==typeof t?null==r||r.logout(`${o}${t}`):null==r||r.logout(),n("LOGOUT"),i("string"==typeof t?t:"/")},handleAuthentication:u,dispatch:n}};class f{constructor(t){this.dispatch=t.dispatch,this.customPropertyNamespace=t.customPropertyNamespace,import("auth0-js").then(({default:e})=>{this.auth0=new e(p({},t))})}static addDefaultParams(t,e){return p({redirectUri:e+"/auth0_callback",audience:`https://${t.domain}/api/v2/`,responseType:"token id_token",scope:"openid profile email"},t)}authorize(){var t;null==(t=this.auth0)||t.authorize()}signup(){var t;null==(t=this.auth0)||t.authorize({mode:"signUp",screen_hint:"signup"})}logout(t){var e;null==(e=this.auth0)||e.logout({returnTo:t})}userId(t){return t.sub}userRoles(t){const e=t[(this.customPropertyNamespace+"/user_metadata").replace(/\/+user_metadata/,"/user_metadata")];return(null==e?void 0:e.roles)||null}async handleLoginCallback(){var t=this;return new Promise((e,n)=>{var r;null==(r=this.auth0)||r.parseHash(async function(n,r){n&&(t.dispatch("ERROR",{error:n,errorType:"authResult"}),e(!1));try{const n=await t.handleAuthResult(r);e(n)}catch(n){t.dispatch("ERROR",{error:n,errorType:"handleAuth"}),e(!1)}})})}async checkSession(){var t=this;return new Promise((e,n)=>{var r;null==(r=this.auth0)||r.checkSession({},async function(r,i){if(!r&&i&&i.accessToken&&i.idToken)try{const n=await t.fetchUser(i);e({user:n,authResult:i})}catch(t){n(t)}else n(r||new Error("Session invalid"))})})}async handleAuthResult(t){if(t&&t.accessToken&&t.idToken){const e=await this.fetchUser(t);return this.dispatch("AUTHENTICATED",{authResult:t,user:e}),!0}return!1}async fetchUser(t){return new Promise((e,n)=>{var r;null==(r=this.auth0)||r.client.userInfo((null==t?void 0:t.accessToken)||"",(t,r)=>{t?n(t):e(r)})})}}var m={__proto__:null,Auth0:f,NetlifyIdentity:class{constructor(t){this.dispatch=t.dispatch,import("netlify-identity-widget").then(({default:e})=>{this.netlifyIdentity=e,this.netlifyIdentity.init(t),this.netlifyIdentity.on("error",t=>{this.dispatch("ERROR",{error:t,errorType:"netlifyError"})}),this.netlifyIdentity.on("login",t=>{var e;this.dispatch("AUTHENTICATED",{user:t,authResult:{expiresIn:null==(e=t.token)?void 0:e.expires_in}})}),this.netlifyIdentity.on("init",t=>{var e;console.log("INIT",t),t&&(this.dispatch("LOGIN"),this.dispatch("AUTHENTICATED",{user:t,authResult:{expiresIn:null==(e=t.token)?void 0:e.expires_in}}))})})}static addDefaultParams(t={},e){return t}authorize(){this.dispatch("LOGIN"),this.netlifyIdentity.open("login")}signup(){this.dispatch("LOGIN"),this.netlifyIdentity.open("signup")}logout(t){this.netlifyIdentity.logout()}async handleLoginCallback(t){return console.warn("handleLoginCallback is unnecessary with Netlify Identity Widget"),!0}async checkSession(){try{await this.netlifyIdentity.refresh()}catch(t){throw new Error("Session invalid")}const t=this.netlifyIdentity.currentUser();var e;if(t)return{user:t,authResult:{expiresIn:null==(e=t.token)?void 0:e.expires_in}};throw new Error("Session invalid")}userId(t){return t.id}userRoles(t){return[t.role]||null}}};const v=({children:e,navigate:r,auth0_audience_domain:i,auth0_domain:a,auth0_client_id:o,auth0_params:s={},customPropertyNamespace:u})=>{const c={domain:a,clientID:o,redirectUri:("undefined"!=typeof window?`${window.location.protocol}//${window.location.host}`:"http://localhost:8000")+"/auth0_callback",audience:`https://${i||a}/api/v2/`,responseType:"token id_token",scope:"openid profile email"},{dispatch:l}=y();return n(()=>{const t=new f(p({dispatch:l,customPropertyNamespace:u},c,s));l("SET_CONFIG",{authProvider:t,navigate:r}),l("CHECK_SESSION")},[r,u]),n(()=>{console.warn("Using the AuthProvider root component is deprecated. Migrate to AuthConfig or manual dispatching. Takes  5min.")},[]),t.createElement(t.Fragment,null,e)},I=({authProvider:t,params:e,navigate:a,children:o})=>{const{dispatch:s}=y(),u="undefined"!=typeof window?`${window.location.protocol}//${window.location.host}`:"http://localhost:8000";return n(()=>{const n=new t(p({dispatch:s},t.addDefaultParams(e,u)));s("SET_CONFIG",{authProvider:n,navigate:a,callbackDomain:u}),s("CHECK_SESSION")},[s,t,e,a]),r(i,null,o)};export{I as AuthConfig,v as AuthProvider,m as Providers,y as useAuth};
//# sourceMappingURL=index.modern.js.map
