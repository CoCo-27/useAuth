{"version":3,"file":"index.modern.js","sources":["../src/authReducer.ts","../src/useAuth.ts","../src/AuthProvider.tsx"],"sourcesContent":["import { AuthState, AuthAction } from \"./types\";\n\nexport const authReducer = (\n    state: AuthState,\n    action: AuthAction\n): AuthState => {\n    switch (action.type) {\n        case \"login\":\n            const { authResult, user } = action;\n            const expiresAt =\n                authResult.expiresIn! * 1000 + new Date().getTime();\n\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.setItem(\n                    \"useAuth:expires_at\",\n                    JSON.stringify(expiresAt)\n                );\n                localStorage.setItem(\"useAuth:user\", JSON.stringify(user));\n            }\n\n            return {\n                ...state,\n                user,\n                expiresAt,\n                authResult\n            };\n        case \"logout\":\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.removeItem(\"useAuth:expires_at\");\n                localStorage.removeItem(\"useAuth:user\");\n            }\n\n            return {\n                ...state,\n                user: {},\n                expiresAt: null,\n                authResult: null\n            };\n        case \"stopAuthenticating\":\n            return {\n                ...state,\n                isAuthenticating: false\n            };\n        case \"startAuthenticating\":\n            return {\n                ...state,\n                isAuthenticating: true\n            };\n        case \"error\":\n            const { errorType, error } = action;\n            return {\n                ...state,\n                user: {},\n                expiresAt: null,\n                authResult: null,\n                errorType,\n                error\n            };\n        default:\n            return state;\n    }\n};\n","import { useContext } from \"react\";\n\nimport { AuthContext } from \"./AuthProvider\";\nimport {\n    useAuthInterface,\n    handleAuthResultInterface,\n    setSessionInterface\n} from \"./types\";\nimport {\n    Auth0DecodedHash,\n    Auth0UserProfile,\n    Auth0Error,\n    Auth0ParseHashError\n} from \"auth0-js\";\n\nconst setSession: setSessionInterface = async ({\n    dispatch,\n    auth0,\n    authResult\n}) => {\n    return new Promise((resolve, reject) => {\n        auth0.client.userInfo(\n            authResult.accessToken || \"\",\n            (err: Auth0Error | null, user: Auth0UserProfile) => {\n                if (err) {\n                    dispatch({\n                        type: \"error\",\n                        errorType: \"userInfo\",\n                        error: err\n                    });\n                    reject(err);\n                } else {\n                    dispatch({\n                        type: \"login\",\n                        authResult,\n                        user\n                    });\n                    resolve(user);\n                }\n            }\n        );\n    });\n};\n\nexport const handleAuthResult: handleAuthResultInterface = async ({\n    err,\n    dispatch,\n    auth0,\n    authResult\n}) => {\n    dispatch({\n        type: \"stopAuthenticating\"\n    });\n\n    if (authResult && authResult.accessToken && authResult.idToken) {\n        try {\n            await setSession({ dispatch, auth0, authResult });\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    } else if (err) {\n        console.error(err);\n        dispatch({\n            type: \"error\",\n            error: err,\n            errorType: \"authResult\"\n        });\n\n        return false;\n    } else {\n        return false;\n    }\n};\n\nexport const useAuth: useAuthInterface = () => {\n    const { state, dispatch, auth0, callback_domain, navigate } = useContext(\n        AuthContext\n    );\n\n    const login = () => {\n        auth0 && auth0.authorize();\n    };\n\n    const signup = () => {\n        auth0 && auth0.authorize({ screen_hint: \"signup\" });\n    };\n\n    const logout = () => {\n        auth0 &&\n            auth0.logout({\n                returnTo: callback_domain\n            });\n        dispatch({\n            type: \"logout\"\n        });\n\n        // Return to the homepage after logout.\n        navigate(\"/\");\n    };\n\n    const handleAuthentication = ({ postLoginRoute = \"/\" } = {}) => {\n        if (typeof window !== \"undefined\") {\n            dispatch({\n                type: \"startAuthenticating\"\n            });\n\n            auth0 &&\n                auth0.parseHash(\n                    async (\n                        err: Auth0ParseHashError | null,\n                        authResult: Auth0DecodedHash | null\n                    ) => {\n                        await handleAuthResult({\n                            err,\n                            authResult,\n                            dispatch,\n                            auth0\n                        });\n\n                        navigate(postLoginRoute);\n                    }\n                );\n        }\n    };\n\n    const isAuthenticated = () => {\n        return !!(state.expiresAt && new Date().getTime() < state.expiresAt);\n    };\n\n    return {\n        isAuthenticating: state.isAuthenticating,\n        isAuthenticated,\n        user: state.user,\n        userId: state.user ? state.user.sub : null,\n        authResult: state.authResult,\n        login,\n        signup,\n        logout,\n        handleAuthentication\n    };\n};\n","import React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport Auth0 from \"auth0-js\";\nimport { AuthOptions } from \"auth0-js\";\n\nimport { authReducer } from \"./authReducer\";\nimport { handleAuthResult } from \"./useAuth\";\nimport {\n    AuthProviderInterface,\n    AuthState,\n    AuthAction,\n    AuthContextState\n} from \"./types\";\n\nfunction getDefaultState(): AuthState {\n    const DEFAULT_STATE = {\n        user: {},\n        expiresAt: null,\n        isAuthenticating: false\n    };\n\n    let stored_state = {};\n\n    if (typeof localStorage !== \"undefined\") {\n        const expiresAt = new Date(\n            JSON.parse(localStorage.getItem(\"useAuth:expires_at\") || \"0\")\n        );\n\n        if (expiresAt > new Date()) {\n            stored_state = {\n                user: JSON.parse(localStorage.getItem(\"useAuth:user\") || \"{}\"),\n                expiresAt: expiresAt\n            };\n        }\n    }\n\n    return {\n        ...DEFAULT_STATE,\n        ...stored_state\n    };\n}\n\nexport const AuthContext = createContext<AuthContextState>({\n    state: getDefaultState(),\n    dispatch: () => {},\n    auth0: null,\n    callback_domain: \"http://localhost:8000\",\n    navigate: (path: string) => {}\n});\n\nexport const AuthProvider: AuthProviderInterface = ({\n    children,\n    navigate,\n    auth0_audience_domain,\n    auth0_domain,\n    auth0_client_id,\n    auth0_params\n}) => {\n    const callbackDomain =\n        typeof window !== \"undefined\"\n            ? `${window.location.protocol}//${window.location.host}`\n            : \"http://localhost:8000\";\n\n    const audienceDomain = auth0_audience_domain || auth0_domain;\n\n    const params: AuthOptions = {\n        domain: auth0_domain,\n        clientID: auth0_client_id,\n        redirectUri: `${callbackDomain}/auth0_callback`,\n        audience: `https://${audienceDomain}/api/v2/`,\n        responseType: \"token id_token\",\n        scope: \"openid profile email\"\n    };\n\n    // Instantiate Auth0 client\n    const auth0 = new Auth0.WebAuth({ ...params, ...auth0_params });\n\n    // Holds authentication state\n    const [state, dispatch] = useReducer<React.Reducer<AuthState, AuthAction>>(\n        authReducer,\n        getDefaultState()\n    );\n\n    const [contextValue, setContextValue] = useState<AuthContextState>({\n        state,\n        dispatch,\n        auth0,\n        callback_domain: callbackDomain,\n        navigate\n    });\n\n    // Update context value and trigger re-render\n    // This patterns avoids unnecessary deep renders\n    // https://reactjs.org/docs/context.html#caveats\n    useEffect(() => {\n        setContextValue((contextValue: AuthContextState) => ({\n            ...contextValue,\n            state\n        }));\n    }, [state]);\n\n    // Verify user is logged-in on AuthProvider mount\n    // Avoids storing sensitive data in local storage\n    useEffect(() => {\n        dispatch({\n            type: \"startAuthenticating\"\n        });\n\n        auth0.checkSession({}, (err, authResult) => {\n            dispatch({\n                type: \"stopAuthenticating\"\n            });\n\n            console.log(err);\n            if (err) {\n                dispatch({\n                    type: \"error\",\n                    errorType: \"checkSession\",\n                    error: err\n                });\n            } else {\n                handleAuthResult({ dispatch, auth0, authResult });\n            }\n        });\n    }, []);\n\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"names":["authReducer","state","action","type","authResult","user","expiresAt","expiresIn","Date","getTime","localStorage","setItem","JSON","stringify","removeItem","isAuthenticating","errorType","error","handleAuthResult","async","err","dispatch","auth0","accessToken","idToken","console","Promise","resolve","reject","client","userInfo","setSession","e","useAuth","callback_domain","navigate","useContext","AuthContext","isAuthenticated","userId","sub","login","authorize","signup","screen_hint","logout","returnTo","handleAuthentication","postLoginRoute","window","parseHash","getDefaultState","stored_state","parse","getItem","createContext","path","AuthProvider","children","auth0_audience_domain","auth0_domain","auth0_client_id","auth0_params","callbackDomain","location","protocol","host","Auth0","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","useReducer","contextValue","setContextValue","useState","useEffect","checkSession","log","React","Provider","value"],"mappings":"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"}