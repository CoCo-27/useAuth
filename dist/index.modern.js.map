{"version":3,"file":"index.modern.js","sources":["../src/AuthProvider.tsx","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/authReducer.ts","../src/useAuth.ts"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport Auth0 from \"auth0-js\";\nimport { AuthOptions } from \"auth0-js\";\n\nimport { AuthProviderInterface, AuthContextState } from \"./types\";\n\nexport const AuthContext = createContext<AuthContextState>({\n    auth0: null,\n    callback_domain: \"http://localhost:8000\",\n    customPropertyNamespace: \"http://localhost:8000\",\n    navigate: (path: string) => {}\n});\n\nexport const AuthProvider: AuthProviderInterface = ({\n    children,\n    navigate,\n    auth0_audience_domain,\n    auth0_domain,\n    auth0_client_id,\n    auth0_params,\n    customPropertyNamespace\n}) => {\n    const callbackDomain =\n        typeof window !== \"undefined\"\n            ? `${window.location.protocol}//${window.location.host}`\n            : \"http://localhost:8000\";\n\n    const audienceDomain = auth0_audience_domain || auth0_domain;\n\n    const params: AuthOptions = {\n        domain: auth0_domain,\n        clientID: auth0_client_id,\n        redirectUri: `${callbackDomain}/auth0_callback`,\n        audience: `https://${audienceDomain}/api/v2/`,\n        responseType: \"token id_token\",\n        scope: \"openid profile email\"\n    };\n\n    // Instantiate Auth0 client\n    const auth0 = new Auth0.WebAuth({ ...params, ...auth0_params });\n\n    // Holds authentication state\n    // const [state, send] = useMachine(authMachine);\n    // hydrateFromLocalStorage(send);\n\n    const [contextValue, setContextValue] = useState<AuthContextState>({\n        // state: state.context,\n        // send,\n        auth0,\n        callback_domain: callbackDomain,\n        customPropertyNamespace,\n        navigate\n    });\n\n    // Update context value and trigger re-render\n    // This patterns avoids unnecessary deep renders\n    // https://reactjs.org/docs/context.html#caveats\n    useEffect(() => {\n        setContextValue((contextValue: AuthContextState) => ({\n            ...contextValue\n            // state: state.context\n        }));\n    }, []);\n\n    // // Verify user is logged-in on AuthProvider mount\n    // // Avoids storing sensitive data in local storage\n    // useEffect(() => {\n    //     send(\"LOGIN\");\n\n    //     auth0.checkSession({}, (err, authResult) => {\n    //         console.log(err);\n    //         if (err) {\n    //             send(\"ERROR\", {\n    //                 errorType: \"checkSession\",\n    //                 error: err\n    //             });\n    //         } else {\n    //             handleAuthResult({ send, auth0, authResult });\n    //         }\n    //     });\n    // }, []);\n\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { Machine, assign, interpret } from \"xstate\";\nimport { AuthState, AuthAction } from \"./types\";\n\nexport const authMachine = Machine<AuthState>(\n    {\n        id: \"useAuth\",\n        initial: \"unauthenticated\",\n        context: {\n            user: {},\n            expiresAt: null,\n            authResult: null,\n            isAuthenticating: false,\n            error: undefined,\n            errorType: undefined\n        },\n        states: {\n            unauthenticated: {\n                on: {\n                    LOGIN: \"authenticating\"\n                }\n            },\n            authenticating: {\n                on: {\n                    ERROR: \"error\",\n                    AUTHENTICATED: \"authenticated\"\n                },\n                entry: [\"startAuthenticating\"],\n                exit: [\"stopAuthenticating\"]\n            },\n            authenticated: {\n                on: {\n                    LOGOUT: \"unauthenticated\"\n                },\n                entry: [\"saveUserToContext\", \"saveToLocalStorage\"],\n                exit: [\"clearUserFromContext\", \"clearLocalStorage\"]\n            },\n            error: {\n                entry: [\n                    \"saveErrorToContext\",\n                    \"clearUserFromContext\",\n                    \"clearLocalStorage\"\n                ]\n            }\n        }\n    },\n    {\n        actions: {\n            startAuthenticating: assign(context => {\n                return {\n                    isAuthenticating: true\n                };\n            }),\n            stopAuthenticating: assign(context => {\n                return {\n                    isAuthenticating: false\n                };\n            }),\n            saveUserToContext: assign((context, event) => {\n                const { authResult, user } = event;\n                const expiresAt =\n                    authResult.expiresIn! * 1000 + new Date().getTime();\n\n                return {\n                    user,\n                    authResult,\n                    expiresAt\n                };\n            }),\n            clearUserFromContext: assign(context => {\n                return {\n                    user: {},\n                    expiresAt: null,\n                    authResult: null\n                };\n            }),\n            saveToLocalStorage: (context, event) => {\n                const { expiresAt, user } = context;\n\n                if (typeof localStorage !== \"undefined\") {\n                    localStorage.setItem(\n                        \"useAuth:expires_at\",\n                        JSON.stringify(expiresAt)\n                    );\n                    localStorage.setItem(\"useAuth:user\", JSON.stringify(user));\n                }\n            },\n            clearLocalStorage: () => {\n                if (typeof localStorage !== \"undefined\") {\n                    localStorage.removeItem(\"useAuth:expires_at\");\n                    localStorage.removeItem(\"useAuth:user\");\n                }\n            },\n            saveErrorToContext: assign((context, event) => {\n                return {\n                    errorType: event.errorType,\n                    error: event.error\n                };\n            })\n        }\n    }\n);\n\n// check localstorage and login as soon as this file loads\nfunction hydrateFromLocalStorage(send: any) {\n    if (typeof localStorage !== \"undefined\") {\n        const expiresAt = new Date(\n            JSON.parse(localStorage.getItem(\"useAuth:expires_at\") || \"0\")\n        );\n\n        if (expiresAt > new Date()) {\n            const user = JSON.parse(\n                localStorage.getItem(\"useAuth:user\") || \"{}\"\n            );\n            send(\"LOGIN\");\n            send(\"AUTHENTICATED\", {\n                user,\n                authResult: {\n                    expiresIn:\n                        (new Date().getTime() - expiresAt.getTime()) / 1000\n                }\n            });\n        }\n    }\n}\n\nexport const authService = interpret(authMachine);\nauthService.start();\n\nhydrateFromLocalStorage(authService.send);\n","import { useCallback, useContext } from \"react\";\n\nimport { AuthContext } from \"./AuthProvider\";\nimport {\n    useAuthInterface,\n    handleAuthResultInterface,\n    setSessionInterface\n} from \"./types\";\nimport {\n    Auth0DecodedHash,\n    Auth0UserProfile,\n    Auth0Error,\n    Auth0ParseHashError\n} from \"auth0-js\";\nimport { useService } from \"@xstate/react\";\nimport { authService } from \"./authReducer\";\n\nconst setSession: setSessionInterface = async ({ send, auth0, authResult }) => {\n    return new Promise((resolve, reject) => {\n        auth0.client.userInfo(\n            authResult.accessToken || \"\",\n            (err: Auth0Error | null, user: Auth0UserProfile) => {\n                if (err) {\n                    send(\"ERROR\", {\n                        errorType: \"userInfo\",\n                        error: err\n                    });\n                    reject(err);\n                } else {\n                    send(\"AUTHENTICATED\", {\n                        authResult,\n                        user\n                    });\n                    resolve(user);\n                }\n            }\n        );\n    });\n};\n\nexport const handleAuthResult: handleAuthResultInterface = async ({\n    err,\n    send,\n    auth0,\n    authResult\n}) => {\n    if (authResult && authResult.accessToken && authResult.idToken) {\n        try {\n            await setSession({ send, auth0, authResult });\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    } else if (err) {\n        console.error(err);\n        send(\"ERROR\", {\n            error: err,\n            errorType: \"authResult\"\n        });\n\n        return false;\n    } else {\n        return false;\n    }\n};\n\n/**\n * The main API for useAuth\n *\n * @return {boolean} isAuthenticated is current user authenticated\n * @return {boolean} isAuthenticating currently running authentication\n * @return {function} isAuthorized check if current user is authenticated and matches list of roles\n * @return {object} user current user\n * @return {string} userId current user's identifier\n * @return {object} authResult raw authentication result object from auth provider\n * @return {function} login start the login process\n * @return {function} signup same as login, passes { mode: \"signUp\", screen_hint: \"signup\" } to Auth0\n * @return {function} logout start the logout process\n * @return {function} handleAuthentication function to call on your callback page\n */\nexport const useAuth: useAuthInterface = () => {\n    const {\n        auth0,\n        callback_domain,\n        navigate,\n        customPropertyNamespace\n    } = useContext(AuthContext);\n\n    const [state, eventSend] = useService(authService);\n\n    // TODO: ask David why these are different\n    const send = useCallback(\n        (eventName: string, eventData?: any) => {\n            eventSend({ type: eventName, ...(eventData || {}) });\n        },\n        [eventSend]\n    );\n\n    const login = () => {\n        auth0 && auth0.authorize();\n    };\n\n    const signup = () => {\n        auth0 && auth0.authorize({ mode: \"signUp\", screen_hint: \"signup\" });\n    };\n\n    const logout = () => {\n        auth0 &&\n            auth0.logout({\n                returnTo: callback_domain\n            });\n        send(\"LOGOUT\");\n\n        // Return to the homepage after logout.\n        navigate(\"/\");\n    };\n\n    const handleAuthentication = ({ postLoginRoute = \"/\" } = {}) => {\n        if (typeof window !== \"undefined\") {\n            send(\"LOGIN\");\n            auth0 &&\n                auth0.parseHash(\n                    async (\n                        err: Auth0ParseHashError | null,\n                        authResult: Auth0DecodedHash | null\n                    ) => {\n                        await handleAuthResult({\n                            err,\n                            authResult,\n                            send,\n                            auth0\n                        });\n\n                        navigate(postLoginRoute);\n                    }\n                );\n        }\n    };\n\n    const isAuthenticated = () => {\n        return !!(\n            state.context.expiresAt &&\n            new Date().getTime() < state.context.expiresAt\n        );\n    };\n\n    const isAuthorized = (roles: string | string[]) => {\n        const _roles = Array.isArray(roles) ? roles : [roles];\n        const metadata =\n            state.context.user[\n                // make this friendlier to use if you leave a trailing slash in config\n                `${customPropertyNamespace}/user_metadata`.replace(\n                    /\\/+user_metadata/,\n                    \"/user_metadata\"\n                )\n            ];\n\n        if (!isAuthenticated() || !metadata) {\n            return false;\n        } else {\n            return _roles.some(role => metadata.roles.includes(role));\n        }\n    };\n\n    return {\n        isAuthenticating: state.context.isAuthenticating,\n        isAuthenticated,\n        isAuthorized,\n        user: state.context.user,\n        userId: state.context.user ? state.context.user.sub : null,\n        authResult: state.context.authResult,\n        login,\n        signup,\n        logout,\n        handleAuthentication\n    };\n};\n"],"names":["AuthContext","createContext","auth0","callback_domain","customPropertyNamespace","navigate","path","AuthProvider","children","auth0_audience_domain","auth0_domain","auth0_client_id","auth0_params","callbackDomain","window","location","protocol","host","Auth0","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","contextValue","setContextValue","useState","useEffect","React","Provider","value","Symbol","iterator","asyncIterator","authService","interpret","Machine","id","initial","context","user","expiresAt","authResult","isAuthenticating","error","undefined","errorType","states","unauthenticated","on","LOGIN","authenticating","ERROR","AUTHENTICATED","entry","exit","authenticated","LOGOUT","actions","startAuthenticating","assign","stopAuthenticating","saveUserToContext","event","expiresIn","Date","getTime","clearUserFromContext","saveToLocalStorage","localStorage","setItem","JSON","stringify","clearLocalStorage","removeItem","saveErrorToContext","start","send","parse","getItem","hydrateFromLocalStorage","useAuth","useContext","useService","state","eventSend","useCallback","eventName","eventData","type","isAuthenticated","isAuthorized","roles","_roles","Array","isArray","metadata","replace","some","role","includes","userId","sub","login","authorize","signup","mode","screen_hint","logout","returnTo","handleAuthentication","postLoginRoute","parseHash","err","accessToken","idToken","body","recover","result","Promise","resolve","reject","client","userInfo","setSession","e","then","console","handleAuthResult"],"mappings":"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"}