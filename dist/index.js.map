{"version":3,"file":"index.js","sources":["../src/authReducer.ts","../src/useAuth.ts","../src/AuthProvider.tsx"],"sourcesContent":["import { AuthState, AuthAction } from \"./types\";\n\nexport const authReducer = (\n    state: AuthState,\n    action: AuthAction\n): AuthState => {\n    switch (action.type) {\n        case \"login\":\n            const { authResult, user } = action;\n            const expiresAt =\n                authResult.expiresIn! * 1000 + new Date().getTime();\n\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt));\n                localStorage.setItem(\"user\", JSON.stringify(user));\n            }\n\n            return {\n                ...state,\n                user,\n                expiresAt,\n                authResult\n            };\n        case \"logout\":\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.removeItem(\"expires_at\");\n                localStorage.removeItem(\"user\");\n            }\n\n            return {\n                ...state,\n                user: {},\n                expiresAt: null,\n                authResult: null\n            };\n        case \"stopAuthenticating\":\n            return {\n                ...state,\n                isAuthenticating: false\n            };\n        case \"startAuthenticating\":\n            return {\n                ...state,\n                isAuthenticating: true\n            };\n        case \"error\":\n            const { errorType, error } = action;\n            return {\n                ...state,\n                user: {},\n                expiresAt: null,\n                authResult: null,\n                errorType,\n                error\n            };\n        default:\n            return state;\n    }\n};\n","import { useContext } from \"react\";\n\nimport { AuthContext } from \"./AuthProvider\";\nimport {\n    useAuthInterface,\n    handleAuthResultInterface,\n    setSessionInterface\n} from \"./types\";\nimport {\n    Auth0DecodedHash,\n    Auth0UserProfile,\n    Auth0Error,\n    Auth0ParseHashError\n} from \"auth0-js\";\n\nconst setSession: setSessionInterface = async ({\n    dispatch,\n    auth0,\n    authResult\n}) => {\n    return new Promise((resolve, reject) => {\n        auth0.client.userInfo(\n            authResult.accessToken || \"\",\n            (err: Auth0Error | null, user: Auth0UserProfile) => {\n                if (err) {\n                    dispatch({\n                        type: \"error\",\n                        errorType: \"userInfo\",\n                        error: err\n                    });\n                    reject(err);\n                } else {\n                    dispatch({\n                        type: \"login\",\n                        authResult,\n                        user\n                    });\n                    resolve(user);\n                }\n            }\n        );\n    });\n};\n\nexport const handleAuthResult: handleAuthResultInterface = async ({\n    err,\n    dispatch,\n    auth0,\n    authResult\n}) => {\n    dispatch({\n        type: \"stopAuthenticating\"\n    });\n\n    if (authResult && authResult.accessToken && authResult.idToken) {\n        await setSession({ dispatch, auth0, authResult });\n\n        return true;\n    } else if (err) {\n        console.error(err);\n        dispatch({\n            type: \"error\",\n            error: err,\n            errorType: \"authResult\"\n        });\n\n        return false;\n    } else {\n        return false;\n    }\n};\n\nexport const useAuth: useAuthInterface = () => {\n    const { state, dispatch, auth0, callback_domain, navigate } = useContext(\n        AuthContext\n    );\n\n    const login = () => {\n        auth0 && auth0.authorize();\n    };\n\n    const logout = () => {\n        auth0 &&\n            auth0.logout({\n                returnTo: callback_domain\n            });\n        dispatch({\n            type: \"logout\"\n        });\n\n        // Return to the homepage after logout.\n        navigate(\"/\");\n    };\n\n    const handleAuthentication = ({ postLoginRoute = \"/\" } = {}) => {\n        if (typeof window !== \"undefined\") {\n            dispatch({\n                type: \"startAuthenticating\"\n            });\n\n            auth0 &&\n                auth0.parseHash(\n                    async (\n                        err: Auth0ParseHashError | null,\n                        authResult: Auth0DecodedHash | null\n                    ) => {\n                        await handleAuthResult({\n                            err,\n                            authResult,\n                            dispatch,\n                            auth0\n                        });\n\n                        navigate(postLoginRoute);\n                    }\n                );\n        }\n    };\n\n    const isAuthenticated = () => {\n        return !!(state.expiresAt && new Date().getTime() < state.expiresAt);\n    };\n\n    return {\n        isAuthenticating: state.isAuthenticating,\n        isAuthenticated,\n        user: state.user,\n        userId: state.user ? state.user.sub : null,\n        authResult: state.authResult,\n        login,\n        logout,\n        handleAuthentication\n    };\n};\n","import React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport Auth0 from \"auth0-js\";\nimport { AuthOptions } from \"auth0-js\";\n\nimport { authReducer } from \"./authReducer\";\nimport { handleAuthResult } from \"./useAuth\";\nimport {\n    AuthProviderInterface,\n    AuthState,\n    AuthAction,\n    AuthContextState\n} from \"./types\";\n\nconst DEFAULT_STATE = {\n    user: {},\n    expiresAt: null,\n    isAuthenticating: false\n};\n\nexport const AuthContext = createContext<AuthContextState>({\n    state: DEFAULT_STATE,\n    dispatch: () => {},\n    auth0: null,\n    callback_domain: \"http://localhost:8000\",\n    navigate: (path: string) => {}\n});\n\nexport const AuthProvider: AuthProviderInterface = ({\n    children,\n    navigate,\n    auth0_domain,\n    auth0_client_id,\n    auth0_params\n}) => {\n    const callback_domain =\n        typeof window !== \"undefined\"\n            ? `${window.location.protocol}//${window.location.host}`\n            : \"http://localhost:8000\";\n\n    const params: AuthOptions = {\n        domain: auth0_domain,\n        clientID: auth0_client_id,\n        redirectUri: `${callback_domain}/auth0_callback`,\n        audience: `https://${auth0_domain}/api/v2/`,\n        responseType: \"token id_token\",\n        scope: \"openid profile email\"\n    };\n\n    // Instantiate Auth0 client\n    const auth0 = new Auth0.WebAuth({ ...params, ...auth0_params });\n\n    // Holds authentication state\n    const [state, dispatch] = useReducer<React.Reducer<AuthState, AuthAction>>(\n        authReducer,\n        DEFAULT_STATE\n    );\n\n    const [contextValue, setContextValue] = useState<AuthContextState>({\n        state,\n        dispatch,\n        auth0,\n        callback_domain,\n        navigate\n    });\n\n    // Update context value and trigger re-render\n    // This patterns avoids unnecessary deep renders\n    // https://reactjs.org/docs/context.html#caveats\n    useEffect(() => {\n        setContextValue((contextValue: AuthContextState) => ({\n            ...contextValue,\n            state\n        }));\n    }, [state]);\n\n    // Verify user is logged-in on AuthProvider mount\n    // Avoids storing sensitive data in local storage\n    useEffect(() => {\n        dispatch({\n            type: \"startAuthenticating\"\n        });\n\n        auth0.checkSession({}, (err, authResult) => {\n            dispatch({\n                type: \"stopAuthenticating\"\n            });\n\n            console.log(err);\n            if (err) {\n                dispatch({\n                    type: \"error\",\n                    errorType: \"checkSession\",\n                    error: err\n                });\n            } else {\n                handleAuthResult({ dispatch, auth0, authResult });\n            }\n        });\n    }, []);\n\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"names":["authReducer","state","action","type","expiresAt","authResult","expiresIn","Date","getTime","localStorage","setItem","JSON","stringify","user","Object","removeItem","isAuthenticating","handleAuthResult","ref","dispatch","accessToken","idToken","Promise","resolve","reject","auth0","client","userInfo","err","errorType","error","setSession","console","DEFAULT_STATE","AuthContext","createContext","callback_domain","navigate","path","window","location","Auth0","WebAuth","domain","auth0_domain","clientID","redirectUri","audience","responseType","scope","useReducer","useState","useEffect","setContextValue","contextValue","checkSession","log","React","Provider","value","children","useContext","userId","sub","authorize","logout","returnTo","parseHash","postLoginRoute"],"mappings":"6HAEaA,WACTC,EACAC,UAEQA,EAAOC,UACN,oCAEKC,EACsB,IAAxBC,EAAWC,WAAoB,IAAIC,MAAOC,gBAElB,oBAAjBC,eACPA,aAAaC,QAAQ,aAAcC,KAAKC,UAAUR,IAClDK,aAAaC,QAAQ,OAAQC,KAAKC,UAAUC,KAGzCC,iBACAb,QACHY,YACAT,aACAC,QAEH,eAC2B,oBAAjBI,eACPA,aAAaM,WAAW,cACxBN,aAAaM,WAAW,SAGrBD,iBACAb,GACHY,KAAM,GACNT,UAAW,KACXC,WAAY,WAEf,4BACMS,iBACAb,GACHe,kBAAkB,QAErB,6BACMF,iBACAb,GACHe,kBAAkB,QAErB,eAEMF,iBACAb,GACHY,KAAM,GACNT,UAAW,KACXC,WAAY,0DAKTJ,ICZNgB,WAAqDC,gEAM9DC,EAAS,CACLhB,KAAM,uBAGNE,GAAcA,EAAWe,aAAef,EAAWgB,iCAvCZH,wEAKpC,IAAII,iBAASC,EAASC,GACzBC,EAAMC,OAAOC,SACTtB,EAAWe,aAAe,YACzBQ,EAAwBf,GACjBe,GACAT,EAAS,CACLhB,KAAM,QACN0B,UAAW,WACXC,MAAOF,IAEXJ,EAAOI,KAEPT,EAAS,CACLhB,KAAM,mBACNE,OACAQ,IAEJU,EAAQV,4CAkBdkB,CAAW,UAAEZ,QAAUM,aAAOpB,4BAE7B,IACAuB,GACPI,QAAQF,MAAMF,GACdT,EAAS,CACLhB,KAAM,QACN2B,MAAOF,EACPC,UAAW,gCAGR,qBAEA,uCCvDTI,EAAgB,CAClBpB,KAAM,GACNT,UAAW,KACXY,kBAAkB,GAGTkB,EAAcC,gBAAgC,CACvDlC,MAAOgC,EACPd,sBACAM,MAAO,KACPW,gBAAiB,wBACjBC,kBAAWC,qCAGqCpB,kDAO1CkB,EACgB,oBAAXG,OACEA,OAAOC,uBAAsBD,OAAOC,cACvC,wBAYJf,EAAQ,IAAIgB,EAAMC,QAAQ5B,iBAVJ,CACxB6B,OAAQC,EACRC,2BACAC,YAAgBV,oBAChBW,oBAAqBH,aACrBI,aAAc,iBACdC,MAAO,2CAOeC,aACtBlD,EACAiC,mBAGoCkB,WAA2B,OAC/DlD,WACAkB,QACAM,kBACAW,WACAC,yBAMJe,uBACIC,WAAiBC,UAAoCxC,iBAC9CwC,SACHrD,OAEL,CAACA,IAIJmD,uBACIjC,EAAS,CACLhB,KAAM,wBAGVsB,EAAM8B,aAAa,YAAK3B,EAAKvB,GACzBc,EAAS,CACLhB,KAAM,uBAGV6B,QAAQwB,IAAI5B,GACRA,EACAT,EAAS,CACLhB,KAAM,QACN0B,UAAW,eACXC,MAAOF,IAGXX,EAAiB,UAAEE,QAAUM,aAAOpB,OAG7C,IAGCoD,gBAACvB,EAAYwB,UAASC,MAAOL,GACxBM,qCD7BqDC,aAC1D3B,2EAiDG,CACHlB,iBAAkBf,EAAMe,qDAJdf,EAAMG,YAAa,IAAIG,MAAOC,UAAYP,EAAMG,YAM1DS,KAAMZ,EAAMY,KACZiD,OAAQ7D,EAAMY,KAAOZ,EAAMY,KAAKkD,IAAM,KACtC1D,WAAYJ,EAAMI,4BAlDlBoB,GAASA,EAAMuC,+BAIfvC,GACIA,EAAMwC,OAAO,CACTC,SAAU9B,IAElBjB,EAAS,CACLhB,KAAM,WAIVkC,EAAS,oCAGiBnB,kBAA2B,0CAAR,KACvB,oBAAXqB,SACPpB,EAAS,CACLhB,KAAM,wBAGVsB,GACIA,EAAM0C,mBAEEvC,EACAvB,8BAEMY,EAAiB,KACnBW,aACAvB,WACAc,QACAM,qBAGJY,EAAS+B"}