{"version":3,"file":"NetlifyIdentity.js","sources":["../src/providers/NetlifyIdentity.ts"],"sourcesContent":["import { AuthOptions, AuthProviderClass, ProviderOptions } from \"../types\";\nimport { User, InitOptions } from \"netlify-identity-widget\";\n\n// Wrapper for NetlifyIdentity conforming to auth provider interface\nexport class NetlifyIdentity implements AuthProviderClass {\n    private netlifyIdentity?: any;\n    private dispatch: (eventName: string, eventData?: any) => void;\n\n    constructor(params: AuthOptions) {\n        this.dispatch = params.dispatch;\n\n        import(\"netlify-identity-widget\").then(({ default: widget }) => {\n            this.netlifyIdentity = widget;\n\n            this.netlifyIdentity.init(params as InitOptions);\n\n            this.netlifyIdentity.on(\"error\", (error: Error) => {\n                this.dispatch(\"ERROR\", {\n                    error,\n                    errorType: \"netlifyError\"\n                });\n            });\n            this.netlifyIdentity.on(\"login\", (user: User) => {\n                this.dispatch(\"AUTHENTICATED\", {\n                    user,\n                    authResult: {\n                        expiresIn: user.token?.expires_in\n                    }\n                });\n            });\n            this.netlifyIdentity.on(\"init\", (user: User) => {\n                console.log(\"INIT\", user);\n                if (user) {\n                    this.dispatch(\"LOGIN\");\n                    this.dispatch(\"AUTHENTICATED\", {\n                        user,\n                        authResult: {\n                            expiresIn: user.token?.expires_in\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    static addDefaultParams(\n        params: ProviderOptions = {},\n        callbackDomain: string\n    ) {\n        const vals = params as InitOptions;\n        return vals;\n    }\n\n    // Opens login dialog\n    public authorize() {\n        this.dispatch(\"LOGIN\");\n        this.netlifyIdentity.open(\"login\");\n    }\n\n    // Opens signup dialog\n    public signup() {\n        this.dispatch(\"LOGIN\");\n        this.netlifyIdentity.open(\"signup\");\n    }\n\n    // Logs user out on the underlying service\n    public logout(returnTo?: string) {\n        this.netlifyIdentity.logout();\n    }\n\n    // Handles login after redirect back from service\n    public async handleLoginCallback(dispatch: any): Promise<boolean> {\n        console.warn(\n            \"handleLoginCallback is unnecessary with Netlify Identity Widget\"\n        );\n        return true;\n    }\n\n    // verifies session is still valid\n    // returns fresh user info\n    public async checkSession(): Promise<{\n        user: any;\n        authResult: any;\n    }> {\n        try {\n            await this.netlifyIdentity.refresh();\n        } catch (e) {\n            throw new Error(\"Session invalid\");\n        }\n\n        const user = this.netlifyIdentity.currentUser();\n\n        if (user) {\n            return {\n                user,\n                authResult: {\n                    expiresIn: user.token?.expires_in\n                }\n            };\n        } else {\n            throw new Error(\"Session invalid\");\n        }\n    }\n\n    // Returns the userId from NetlifyIdentity shape of data\n    public userId(user: User): string {\n        return user.id;\n    }\n\n    // Returns user roles from NetlifyIdentity shape of data\n    public userRoles(user: User): string[] | null {\n        return [user.role] || null;\n    }\n}\n"],"names":["params","this","dispatch","then","_this","netlifyIdentity","init","on","error","errorType","user","authResult","expiresIn","token","_user$token","expires_in","console","log","_user$token2","NetlifyIdentity","addDefaultParams","callbackDomain","authorize","open","signup","logout","returnTo","handleLoginCallback","warn","checkSession","_this3","currentUser","_user$token3","Error","refresh","userId","id","userRoles","role"],"mappings":"mCAQI,WAAYA,cACRC,KAAKC,SAAWF,EAAOE,SAEvB,2QAAO,+BAA2BC,KAAK,YACnCC,EAAKC,0BAELD,EAAKC,gBAAgBC,KAAKN,GAE1BI,EAAKC,gBAAgBE,GAAG,QAAS,SAACC,GAC9BJ,EAAKF,SAAS,QAAS,CACnBM,MAAAA,EACAC,UAAW,mBAGnBL,EAAKC,gBAAgBE,GAAG,QAAS,SAACG,SAC9BN,EAAKF,SAAS,gBAAiB,CAC3BQ,KAAAA,EACAC,WAAY,CACRC,mBAAWF,EAAKG,cAALC,EAAYC,gBAInCX,EAAKC,gBAAgBE,GAAG,OAAQ,SAACG,SAC7BM,QAAQC,IAAI,OAAQP,GAChBA,IACAN,EAAKF,SAAS,SACdE,EAAKF,SAAS,gBAAiB,CAC3BQ,KAAAA,EACAC,WAAY,CACRC,mBAAWF,EAAKG,cAALK,EAAYH,mBAjCnDI,EAyCWC,iBAAP,SACIpB,EACAqB,GAGA,gBAJArB,IAAAA,EAA0B,IAGbA,8BAKVsB,UAAA,WACHrB,KAAKC,SAAS,SACdD,KAAKI,gBAAgBkB,KAAK,YAIvBC,OAAA,WACHvB,KAAKC,SAAS,SACdD,KAAKI,gBAAgBkB,KAAK,aAIvBE,OAAA,SAAOC,GACVzB,KAAKI,gBAAgBoB,YAIZE,6BAAoBzB,OAI7B,OAHAc,QAAQY,KACJ,oFAEG,GAvEf,sCA4EiBC,kCAKC5B,mBAKV,MAAMS,EAAOoB,EAAKzB,gBAAgB0B,iBAE9BrB,EACA,MAAO,CACHA,KAAAA,EACAC,WAAY,CACRC,mBAAWF,EAAKG,cAALmB,EAAYjB,aAI/B,UAAUkB,MAAM,8DAfVH,EAAKzB,gBAAgB6B,oGAE3B,UAAUD,MAAM,qEAnF5B,sCAqGWE,OAAA,SAAOzB,GACV,OAAOA,EAAK0B,MAITC,UAAA,SAAU3B,GACb,MAAO,CAACA,EAAK4B,OAAS"}