{"version":3,"file":"index.module.js","sources":["../src/authReducer.ts","../src/useAuth.ts","../src/AuthProvider.tsx"],"sourcesContent":["import { addSeconds, differenceInSeconds, isAfter } from \"date-fns\";\nimport { Machine, assign, interpret } from \"xstate\";\nimport { choose } from \"xstate/lib/actions\";\nimport { AuthState } from \"./types\";\nimport { checkSession } from \"./useAuth\";\n\nexport const authMachine = Machine<AuthState>(\n    {\n        id: \"useAuth\",\n        initial: \"unauthenticated\",\n        context: {\n            user: {},\n            expiresAt: null,\n            authResult: null,\n            isAuthenticating: false,\n            error: undefined,\n            errorType: undefined,\n            config: {\n                navigate: () =>\n                    console.error(\n                        \"Please specify a navigation method that works with your router\"\n                    ),\n                callbackDomain: \"http://localhost:8000\",\n                customPropertyNamespace: \"http://localhost:8000\"\n            }\n        },\n        states: {\n            unauthenticated: {\n                on: {\n                    LOGIN: \"authenticating\",\n                    CHECK_SESSION: \"verifying\",\n                    SET_CONFIG: {\n                        actions: [\"setConfig\"]\n                    }\n                }\n            },\n            authenticating: {\n                on: {\n                    ERROR: \"error\",\n                    AUTHENTICATED: \"authenticated\",\n                    SET_CONFIG: {\n                        actions: [\"setConfig\"]\n                    }\n                },\n                entry: [\"startAuthenticating\"],\n                exit: [\"stopAuthenticating\"]\n            },\n            verifying: {\n                invoke: {\n                    id: \"checkSession\",\n                    src: (context, event) =>\n                        checkSession({\n                            authProvider: context.config.authProvider\n                        }),\n                    onDone: {\n                        target: \"authenticated\"\n                    },\n                    onError: {\n                        target: \"error\"\n                    }\n                },\n                entry: [\"startAuthenticating\"],\n                exit: [\"stopAuthenticating\"]\n            },\n            authenticated: {\n                on: {\n                    LOGOUT: \"unauthenticated\",\n                    SET_CONFIG: {\n                        actions: [\"setConfig\"]\n                    },\n                    CHECK_SESSION: \"verifying\"\n                },\n                entry: [\"saveUserToContext\", \"saveToLocalStorage\"],\n                exit: choose([\n                    {\n                        cond: (context, event) =>\n                            event.type !== \"CHECK_SESSION\",\n                        actions: [\"clearUserFromContext\", \"clearLocalStorage\"]\n                    }\n                ])\n            },\n            error: {\n                entry: [\n                    \"saveErrorToContext\",\n                    \"clearUserFromContext\",\n                    \"clearLocalStorage\"\n                ]\n            }\n        }\n    },\n    {\n        actions: {\n            startAuthenticating: assign(context => {\n                return {\n                    isAuthenticating: true\n                };\n            }),\n            stopAuthenticating: assign(context => {\n                return {\n                    isAuthenticating: false\n                };\n            }),\n            saveUserToContext: assign((context, event) => {\n                const { authResult, user } = event.data ? event.data : event;\n                const expiresAt = addSeconds(new Date(), authResult.expiresIn);\n\n                return {\n                    user,\n                    authResult,\n                    expiresAt\n                };\n            }),\n            clearUserFromContext: assign(context => {\n                return {\n                    user: {},\n                    expiresAt: null,\n                    authResult: null\n                };\n            }),\n            saveToLocalStorage: (context, event) => {\n                const { expiresAt, user } = context;\n\n                if (typeof localStorage !== \"undefined\") {\n                    localStorage.setItem(\n                        \"useAuth:expires_at\",\n                        expiresAt ? expiresAt.toISOString() : \"0\"\n                    );\n                    localStorage.setItem(\"useAuth:user\", JSON.stringify(user));\n                }\n            },\n            clearLocalStorage: () => {\n                if (typeof localStorage !== \"undefined\") {\n                    localStorage.removeItem(\"useAuth:expires_at\");\n                    localStorage.removeItem(\"useAuth:user\");\n                }\n            },\n            saveErrorToContext: assign((context, event) => {\n                return {\n                    errorType: event.errorType,\n                    error: event.error\n                };\n            }),\n            setConfig: assign((context, event) => {\n                return {\n                    config: {\n                        ...context.config,\n                        ...event\n                    }\n                };\n            })\n        }\n    }\n);\n\n// check localstorage and login as soon as this file loads\nfunction hydrateFromLocalStorage(send: any) {\n    if (typeof localStorage !== \"undefined\") {\n        const expiresAt = new Date(\n                localStorage.getItem(\"useAuth:expires_at\") || \"0\"\n            ),\n            now = new Date();\n\n        if (isAfter(expiresAt, now)) {\n            const user = JSON.parse(\n                localStorage.getItem(\"useAuth:user\") || \"{}\"\n            );\n            send(\"LOGIN\");\n            send(\"AUTHENTICATED\", {\n                user,\n                authResult: {\n                    expiresIn: differenceInSeconds(expiresAt, now)\n                }\n            });\n        }\n    }\n}\n\nexport const authService = interpret(authMachine);\nauthService.start();\n\nhydrateFromLocalStorage(authService.send);\n","import { useCallback } from \"react\";\n\nimport {\n    useAuthInterface,\n    handleAuthResultInterface,\n    fetchUserInterface\n} from \"./types\";\nimport {\n    Auth0DecodedHash,\n    Auth0UserProfile,\n    Auth0Error,\n    Auth0ParseHashError,\n    WebAuth\n} from \"auth0-js\";\nimport { useService } from \"@xstate/react\";\nimport { authService } from \"./authReducer\";\nimport { isAfter } from \"date-fns\";\n\nconst fetchUser: fetchUserInterface = async ({ authProvider, authResult }) => {\n    return new Promise((resolve, reject) => {\n        authProvider.client.userInfo(\n            authResult.accessToken || \"\",\n            (err: Auth0Error | null, user: Auth0UserProfile) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(user);\n                }\n            }\n        );\n    });\n};\n\nexport const handleAuthResult: handleAuthResultInterface = async ({\n    err,\n    dispatch,\n    authProvider,\n    authResult\n}) => {\n    if (authResult && authResult.accessToken && authResult.idToken) {\n        try {\n            const user = await fetchUser({\n                authProvider,\n                authResult\n            });\n\n            dispatch(\"AUTHENTICATED\", {\n                authResult,\n                user\n            });\n\n            return true;\n        } catch (e) {\n            dispatch(\"ERROR\", {\n                error: e,\n                errorType: \"fetchUser\"\n            });\n            return false;\n        }\n    } else if (err) {\n        console.error(err);\n        dispatch(\"ERROR\", {\n            error: err,\n            errorType: \"authResult\"\n        });\n\n        return false;\n    } else {\n        return false;\n    }\n};\n\n// verifies session is still valid\n// returns fresh user info\n// TODO: types are leaking auth provider\nexport async function checkSession({\n    authProvider\n}: {\n    authProvider: WebAuth;\n}): Promise<{ user: Auth0UserProfile; authResult: Auth0DecodedHash }> {\n    console.log(\"CHECKING SESSION\");\n    return new Promise((resolve, reject) => {\n        authProvider.checkSession(\n            {},\n            async (err: any, authResult: Auth0DecodedHash) => {\n                if (\n                    !err &&\n                    authResult &&\n                    authResult.accessToken &&\n                    authResult.idToken\n                ) {\n                    // fetch user data\n                    try {\n                        const user = await fetchUser({\n                            authProvider,\n                            authResult\n                        });\n                        console.log(\"resolving with\", { user, authResult });\n                        resolve({ user, authResult });\n                    } catch (e) {\n                        reject(e);\n                    }\n                } else {\n                    reject(err || new Error(\"Session invalid\"));\n                }\n            }\n        );\n    });\n}\n\n/**\n * The main API for useAuth\n *\n * @return {boolean} isAuthenticated is current user authenticated\n * @return {boolean} isAuthenticating currently running authentication\n * @return {function} isAuthorized check if current user is authenticated and matches list of roles\n * @return {object} user current user\n * @return {string} userId current user's identifier\n * @return {object} authResult raw authentication result object from auth provider\n * @return {function} login start the login process\n * @return {function} signup same as login, passes { mode: \"signUp\", screen_hint: \"signup\" } to Auth0\n * @return {function} logout start the logout process\n * @return {function} handleAuthentication function to call on your callback page\n */\nexport const useAuth: useAuthInterface = () => {\n    const [state, dispatch] = useService(authService);\n\n    const {\n        authProvider,\n        navigate,\n        callbackDomain,\n        customPropertyNamespace\n    } = state.context.config;\n\n    // // verifies session is valid when authProvider is set\n    // useEffect(() => {\n    //     if (authProvider && state.value !== \"authenticating\") {\n    //         console.log(\"CHECKING\");\n    //         dispatch(\"CHECK_SESSION\");\n\n    //         authProvider.checkSession(\n    //             {},\n    //             // TODO: types leaking auth provider\n    //             (err: any, authResult: Auth0DecodedHash) => {\n    //                 handleAuthResult({\n    //                     err,\n    //                     authResult,\n    //                     authProvider,\n    //                     dispatch\n    //                 });\n    //             }\n    //         );\n    //     }\n    // }, [authProvider]);\n\n    const login = () => {\n        authProvider && authProvider.authorize();\n    };\n\n    const signup = () => {\n        authProvider &&\n            authProvider.authorize({ mode: \"signUp\", screen_hint: \"signup\" });\n    };\n\n    const logout = () => {\n        authProvider &&\n            authProvider.logout({\n                returnTo: callbackDomain\n            });\n        dispatch(\"LOGOUT\");\n\n        // Return to the homepage after logout.\n        navigate(\"/\");\n    };\n\n    const handleAuthentication = useCallback(\n        ({ postLoginRoute = \"/\" } = {}) => {\n            if (!authProvider || !navigate || !callbackDomain) {\n                console.warn(\"authProvider not configured yet\");\n                return;\n            }\n\n            if (typeof window !== \"undefined\") {\n                dispatch(\"LOGIN\");\n\n                authProvider.parseHash(\n                    async (\n                        err: Auth0ParseHashError | null,\n                        authResult: Auth0DecodedHash | null\n                    ) => {\n                        await handleAuthResult({\n                            err,\n                            authResult,\n                            dispatch,\n                            authProvider\n                        });\n\n                        navigate(postLoginRoute);\n                    }\n                );\n            }\n        },\n        [authProvider, navigate, callbackDomain]\n    );\n\n    const isAuthenticated = () => {\n        return !!(\n            state.context.expiresAt &&\n            isAfter(state.context.expiresAt, new Date())\n        );\n    };\n\n    const isAuthorized = (roles: string | string[]) => {\n        const _roles = Array.isArray(roles) ? roles : [roles];\n        const metadata =\n            state.context.user[\n                // make this friendlier to use if you leave a trailing slash in config\n                `${customPropertyNamespace}/user_metadata`.replace(\n                    /\\/+user_metadata/,\n                    \"/user_metadata\"\n                )\n            ];\n\n        if (!isAuthenticated() || !metadata) {\n            return false;\n        } else {\n            return _roles.some(role => metadata.roles.includes(role));\n        }\n    };\n\n    return {\n        isAuthenticating: state.context.isAuthenticating,\n        isAuthenticated,\n        isAuthorized,\n        user: state.context.user,\n        userId: state.context.user ? state.context.user.sub : null,\n        authResult: state.context.authResult,\n        login,\n        signup,\n        logout,\n        handleAuthentication,\n        dispatch\n    };\n};\n","import React, { useEffect } from \"react\";\nimport Auth0 from \"auth0-js\";\nimport { AuthOptions } from \"auth0-js\";\n\nimport { AuthProviderInterface } from \"./types\";\nimport { handleAuthResult, useAuth } from \"./useAuth\";\n\nexport const AuthProvider: AuthProviderInterface = ({\n    children,\n    navigate,\n    auth0_audience_domain,\n    auth0_domain,\n    auth0_client_id,\n    auth0_params = {},\n    customPropertyNamespace\n}) => {\n    const callbackDomain =\n        typeof window !== \"undefined\"\n            ? `${window.location.protocol}//${window.location.host}`\n            : \"http://localhost:8000\";\n\n    const audienceDomain = auth0_audience_domain || auth0_domain;\n\n    const params: AuthOptions = {\n        domain: auth0_domain,\n        clientID: auth0_client_id,\n        redirectUri: `${callbackDomain}/auth0_callback`,\n        audience: `https://${audienceDomain}/api/v2/`,\n        responseType: \"token id_token\",\n        scope: \"openid profile email\"\n    };\n\n    const { dispatch } = useAuth();\n\n    // Instantiate Auth0 client\n\n    useEffect(() => {\n        const auth0 = new Auth0.WebAuth({ ...params, ...auth0_params });\n\n        dispatch(\"SET_CONFIG\", {\n            authProvider: auth0,\n            navigate,\n            customPropertyNamespace,\n            callbackDomain\n        });\n\n        dispatch(\"CHECK_SESSION\");\n    }, [navigate, customPropertyNamespace, callbackDomain]);\n\n    return <React.Fragment>{children}</React.Fragment>;\n};\n"],"names":["authService","interpret","Machine","id","initial","context","user","expiresAt","authResult","isAuthenticating","error","undefined","errorType","config","navigate","console","callbackDomain","customPropertyNamespace","states","unauthenticated","on","LOGIN","CHECK_SESSION","SET_CONFIG","actions","authenticating","ERROR","AUTHENTICATED","entry","exit","verifying","invoke","src","event","checkSession","authProvider","onDone","target","onError","authenticated","LOGOUT","choose","cond","type","startAuthenticating","assign","stopAuthenticating","saveUserToContext","data","addSeconds","Date","expiresIn","clearUserFromContext","saveToLocalStorage","localStorage","setItem","toISOString","JSON","stringify","clearLocalStorage","removeItem","saveErrorToContext","setConfig","start","send","getItem","now","isAfter","parse","differenceInSeconds","hydrateFromLocalStorage","log","Promise","resolve","reject","err","accessToken","idToken","fetchUser","e","Error","client","userInfo","useAuth","useService","state","dispatch","handleAuthentication","useCallback","postLoginRoute","window","parseHash","handleAuthResult","warn","isAuthenticated","isAuthorized","roles","_roles","Array","isArray","metadata","replace","some","role","includes","userId","sub","login","authorize","signup","mode","screen_hint","logout","returnTo","AuthProvider","children","auth0_domain","auth0_params","location","protocol","host","params","domain","clientID","auth0_client_id","redirectUri","audience","auth0_audience_domain","responseType","scope","useEffect","auth0","Auth0","WebAuth","React","Fragment"],"mappings":"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"}